<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.0">Jekyll</generator><link href="http://isapanah.com/feed.xml" rel="self" type="application/atom+xml" /><link href="http://isapanah.com/" rel="alternate" type="text/html" /><updated>2017-09-09T12:47:13+04:30</updated><id>http://isapanah.com/</id><title type="html">وبلاگ صدرا املشی</title><subtitle>سلام! من صدرا عیسی پناه املشی هستم. توسعه دهنده اپلیکیشن iOS و Android.
</subtitle><entry><title type="html">انیمیشن در اندروید با Lottie</title><link href="http://isapanah.com/2017/oh-my-android-lottie" rel="alternate" type="text/html" title="انیمیشن در اندروید با Lottie" /><published>2017-08-07T00:00:00+04:30</published><updated>2017-08-07T00:00:00+04:30</updated><id>http://isapanah.com/2017/oh-my-android-lottie</id><content type="html" xml:base="http://isapanah.com/2017/oh-my-android-lottie">&lt;p&gt;همونطور که قبلا بهتون در پست  “ &lt;a href=&quot;http://isapanah.com/2017/oh-my-lottie&quot;&gt;استفاده از انیمیشن در توسعه اپلیکیشن&lt;/a&gt; “ قول داده بودم، در این پست قراره به آموزش استفاده از &lt;a href=&quot;https://github.com/airbnb/lottie-android&quot;&gt;لایبرری Lottie&lt;/a&gt; و اضافه کردن منابع بصری انیمه به پروژه اندروید بپردازیم.&lt;/p&gt;

&lt;p&gt;فهرست:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;#bodymovin&quot;&gt;پلاگین BodyMovin&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#bodymovin-install&quot;&gt;نصب پلاگین&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bodymovin-usage&quot;&gt;گرفتن خروجی JSON از پروژه انیمیشن&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;#lottie&quot;&gt;لایبرری Lottie برای اندروید&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#lottie-install&quot;&gt;نصب و آماده‌سازی اولیه&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lottie-basic&quot;&gt;مبانی اولیه و استفاده از یک انیمیشن ساده&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lottie-progress&quot;&gt;انیمیشن با قابلیت کنترل progress&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lottie-animated-button&quot;&gt;پیاده‌سازی دکمه‌های انیمیشنی&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lottie-animated-font&quot;&gt;پیاده سازی فونت انیمیشنی&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lottie-intro&quot;&gt;طراحی صفحه خوش‌آمد گویی با انیمیشن&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;#lottie-tips&quot;&gt;نکات مهم&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;#lottie-final&quot;&gt;صحبت پایانی&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bodymovin&quot;&gt;پلاگین BodyMovin&lt;/h2&gt;

&lt;h3 id=&quot;bodymovin-install&quot;&gt;1.  نصب پلاگین&lt;/h3&gt;

&lt;p&gt;در اولین گام، فرض میکنیم که شما انیمیشن مورد نظر خودتون رو در AfterEffect طراحی کردین و حالا وقتشه که ازش خروجی بگیرید. خب برای اینکار لازمه که اول پلاگین &lt;a href=&quot;https://github.com/bodymovin/bodymovin&quot;&gt;BodyMovin&lt;/a&gt; روی افترافکت نصب کرده باشید.&lt;/p&gt;

&lt;p&gt;میتونید پلاگین رو از &lt;a href=&quot;http://aescripts.com/bodymovin/&quot;&gt;aescripts&lt;/a&gt; یا &lt;a href=&quot;https://creative.adobe.com/addons/products/12557&quot;&gt;adobe store&lt;/a&gt; دریافت کنید؛ اما چون دانلود کردن از اینجا خیلی دردسر داشت، من گذاشتمش در ریپوی پروژه و میتونید از گیتهاب مستقیما دانلودش کنید. ( &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/repo/plugin/bodymovin_v4.10.2.zip&quot;&gt;دانلود پلاگین BodyMovin&lt;/a&gt; )&lt;/p&gt;

&lt;p&gt;فایل دانلودی رو آنزیپ کنید، درون پوشه یک فایل &lt;strong&gt;bodymovin.zxp&lt;/strong&gt; وجود داره. باید اون رو به عنوان اکستنشن به پروژه اضافه کنید، که اونم خیلی دردسر داره! برای راحتتر پیش رفتن این موضوع از ابزاری به نام &lt;strong&gt;zxp&lt;/strong&gt; استفاده میکنیم. نرم‌افزار zxp-installer رو از &lt;a href=&quot;http://aescripts.com/learn/zxp-installer/&quot;&gt;aescripts&lt;/a&gt; دانلود و نصب کنید. بعد از اجرا کردنش کافیه فایل bodymovin.zxp رو به zxp درگ اند دراپ کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/zxp-0.png&quot; alt=&quot;ZXP Installer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;حالا اکستنشن نصب شده و فقط لازمه AfterEffect رو ری استارت کنید.&lt;/p&gt;

&lt;p&gt;قبل از استفاده از BodyMovin لطفا به &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit &amp;gt; Preferences &amp;gt; General&lt;/code&gt; رفته، و تیک &lt;strong&gt;Allow Scripts to Write Files and Access Network&lt;/strong&gt; رو فعال کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/zxp-1.png&quot; alt=&quot;ZXP Installer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;تمامی این روند در هردو سیستم عامل Windows و MacOS به همین ترتیبی که گفتم انجام میشه.&lt;/p&gt;

&lt;h3 id=&quot;bodymovin-usage&quot;&gt;2.  گرفتن خروجی JSON از پروژه انیمیشن&lt;/h3&gt;

&lt;p&gt;خب حالا وقته خروجی گرفتنه.اول از همه پروژه AfterEffect تون رو باز کنید و بعد کافیه به مسیر &lt;code class=&quot;highlighter-rouge&quot;&gt;Edit &amp;gt; Extionstions &amp;gt; BodyMovin&lt;/code&gt; رفته تا بادی‌مووین آماده خروجی گرفتن بشه.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/bodymovin-0.png&quot; alt=&quot;ZXP Installer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;خب حالا باید مسیر خروجی رو مشخص کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/bodymovin-1.png&quot; alt=&quot;ZXP Installer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;انمیشین‌ی که میخوایید ازش خروجی بگیرید رو انتخاب کنید‌.&lt;/p&gt;

&lt;p&gt;توجه کنید که میتونید در همینجا Preview انیمیشن رو هم مشاهده کنید، یا میتونید اینکارو با نصب پلیر مخصوص بادی‌مووین انجام بدید، فقط کافیه روی Get the Player کلیک کرده و نصبش کنید.&lt;/p&gt;

&lt;p&gt;و در آخر روی Render کلیک کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/bodymovin-2.png&quot; alt=&quot;ZXP Installer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;حالا همه چی تموم شده و روی Done کلیک کنید و تمام.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/bodymovin-3.png&quot; alt=&quot;ZXP Installer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;تمامی مراحل نصب و خروجی گرفتن از BodyMovin رو پشت‌سر گذاشتیم. فقط کافیه فایل json خروجی گرفته شده رو به پروژه اندروید، iOS و یا ReactNative اضافه کنیم.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lottie&quot;&gt;لایبرری Lottie برای اندروید&lt;/h2&gt;

&lt;h3 id=&quot;lottie-install&quot;&gt;1.  نصب و آماده‌سازی اولیه&lt;/h3&gt;

&lt;p&gt;قبل از شروع همه چیز، من برای نمونه و تمرین یه پروژه اندروید ساخته و در گیتهابم گذاشتم، میتونید به &lt;a href=&quot;https://github.com/sadra/LottieExampleProject&quot;&gt;صفحه گیتهاب این پروژه&lt;/a&gt; مراجعه کرده و به تمامی فایلها مثل پلاگینها، نمونه های انیمیشن و کدهای سمپل در همون ریپوزیتوری دسترسی داشته باشد.&lt;/p&gt;

&lt;p&gt;در اولین گام باید لایبرری &lt;strong&gt;Lottie&lt;/strong&gt; رو به پروژمون اضافه کنیم. کافیه اون رو در Dependencie های پروژه در فایل &lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt; معرفی کنیم و بعدشم هم پروژه رو یکبار سینک میکنیم.&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.airbnb.android:lottie:2.1.0'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;شما باید فایلهای انیمیشن رو در پوشه &lt;strong&gt;assets&lt;/strong&gt; قرار بدید. اگر قبلا پوشه رو تعریف کردین که هیچ، اما اگه اینکارو نکردین کافیه یه دایرکتوری به اسم assets در مسیر &lt;code class=&quot;highlighter-rouge&quot;&gt;app/src/main&lt;/code&gt; ایجاد کرده و بعد فایلهای json انیمیشن رو بریزید اونجا.&lt;/p&gt;

&lt;p&gt;فایلهای JSON ای که در این پروژه استفاده کردم رو میتونید مستقیما از &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/tree/master/app/src/main/assets&quot;&gt;ریپوی گیتهاب&lt;/a&gt; دریافت کنید.&lt;/p&gt;

&lt;h3 id=&quot;lottie-basic&quot;&gt;2.  مبانی اولیه و استفاده از یک انیمیشن ساده&lt;/h3&gt;

&lt;p&gt;اول باید view مربوط به لاتی رو به Layout مورد نظرتون اضافه کنید.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.airbnb.lottie.LottieAnimationView&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/animation_view&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:lottie_fileName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gift.json&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:lottie_loop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;app:lottie_autoPlay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;قبل از هرچیزی بهتره با پارامتر‌های اصلی که به ویوومون دادیم آشنا بشیم. پارامتر &lt;strong&gt;lottie_fileName&lt;/strong&gt; اشاره به نام و محل فایل json انیمیشنتون داره. توجه کنید که اگه فایل json رو همینجوری در assets قرار دادید که هیچ، فقط کافیه اسم فایل رو نام ببرید؛ اما اگه اون رو در یک پوشه درون assets تجمیع کردین، یادتون نره که حتما نام پوشه رو قبل از فایل ذکر کنید مثلا: &lt;code class=&quot;highlighter-rouge&quot;&gt;myFolder/anim.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;پارامتر &lt;strong&gt;lottie_loop&lt;/strong&gt; اشاره به این مورد داره که این انیمیشن بصورت  با یا بدون لوپ (بی پایان) پخش بشه. اگه اشاره ای بهش نکنید بصورت پیشفرض &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; هست، ولی اگه میخواهید انیمیشنتون لوپ داشته باشه، یادتون نره که به &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; بودنش اشاره کنید.&lt;/p&gt;

&lt;p&gt;و مورد آخر هم &lt;strong&gt;lottie_autoPlay&lt;/strong&gt; هست، که میگه میخوایید همون موقع که ویوو ظاهر شده، شروع کنه به پخش یا نه؟ این هم بصورت پیشفرض &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; هست.&lt;/p&gt;

&lt;p&gt;خب حالا اگه پروژه رو بیلد کنید، میبینید که به چه آسونی انیمیشن به پروژتون اضافه شده ^_^&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/lottie-anim-0.gif&quot; alt=&quot;Lottie Simple Animation Demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;همه این موارد رو در خود کلاستون هم میتونید انجام بدید. اول ویوو رو در کلاستون معرفی و کَست کنید.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;LottieAnimationView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LottieAnimationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;animation_view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;و بعد مورادی مثل محل و نام انیمیشن، لوپ بودنش، و پخش اتوماتیک رو به همون راحتی متیونید واسش تعریف کنید.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello-world.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;playAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ما در حالت کد، امکانات خیلی زیادی داریم. برای مثال اگه بخوایم سرعت انیمیشن رو کم یا زیاد کنیم کافیه متد &lt;code class=&quot;highlighter-rouge&quot;&gt;.setSpeed(floatValue)&lt;/code&gt; رو صدا بزنیم و مقدار دهی کنیم. مقدار 1.0 یعنی همون سرعت نرمال خودش. حالا هرچی از یک بالاتر یا پایینتر باشه، انیمیشن به همون نسبت سریعتر یا کندتر نمایش داده میشه.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//normal speed&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//2x faster&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//2x slower&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;شما همچنین میتونید انیمیشن رو Pause یا متوقف کنید و سپس اقدام به ادامه پخش اون کنید.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pauseAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Pause the animation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;resumeAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//and Resume it again&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;توجه کنید که اگر یکبار Pause کنید انیمیشن متوقف میشه، اما مجددا اگر pauseAnimation رو صدا کنید انیمیشن به نمایش خودش ادامه می‌دهد( Resume میشه ). این مورد درباره resumeAnimation هم صادق هست! احساس میکنم مشکلی در خود لایبرریه، و این مورد رو واسشون issue کردم تا بررسی کنن، پس حواستون بهش باشه.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;یکی دیگه از امکاناتی که در کد به ما داده میشه، اینه که بتونیم به انیمشن رنگ دلخواه خودمون رو بدیم. یه &lt;code class=&quot;highlighter-rouge&quot;&gt;PorterDuffColorFilter&lt;/code&gt; ایجاد کرده و رنگ مورد نظرتون رو بهش بدین. این موضوع رو در نظر داشته باشن که &lt;strong&gt;Mode&lt;/strong&gt; رنگ هم روی &lt;code class=&quot;highlighter-rouge&quot;&gt;PorterDuff.Mode.SRC&lt;/code&gt; باشه بهترین حالته، در مودهای دیگه رنگ تغییر میکنه.&lt;/p&gt;

&lt;p&gt;خب، حالا برای اضافه کردن رنگ ۲متد اصلی داریم. برای اینکه به کل ویوو انیمیشنمون رنگ بدیم، باید از متد &lt;code class=&quot;highlighter-rouge&quot;&gt;addColorFilter(colorFilter)&lt;/code&gt; استفاده کنیم. مواقعی پیش میاد که میخواییم به یه لایه خاص از انیمیشنمون رنگ بدیم، برای اینکار از متد &lt;code class=&quot;highlighter-rouge&quot;&gt;addColorFilterToLayer(“layerName”, colorFilter)&lt;/code&gt; استفاده می‌کنیم. لازمه که اول اسم لایه ای که میخواید رنگ بگیره رو نام برده، و سپس فیلتر رنگ خودتون رو مشخص کنید.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colorFilter1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#CC0321&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colorFilter1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colorFilter2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addColorFilterToLayer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LAYER_NAME&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colorFilter1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;برای پاک شدن رنگ هم کافیه متد clear رو صدا بزنید.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clearColorFilters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;البته شما میتونید فیلتر رنگ رو در خود Layout هم تعریف کنید. البته در اونجا فقط میتونید رنگ رو برای کل ویوو در نظر بگیرید، نه برای یک لایه خاص.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.airbnb.lottie.LottieAnimationView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:lottie_colorFilter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@android:color/holo_purple&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/animation_view&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;و آدرس تمامی کدهای و نمونه‌هایی که در این قسمت پیاده کردیم:&lt;/p&gt;

&lt;div class=&quot;div-ltr&quot;&gt;

  &lt;p&gt;&lt;strong&gt;Get it from github:&lt;/strong&gt; &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/java/com/isapanah/lottieeexampleproject/SimpleAnimation.java&quot;&gt;Class&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/res/layout/simple_animation.xml&quot;&gt;Layout&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/gift.json&quot;&gt;JSON Animation&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lottie-progress&quot;&gt;3.  انیمیشن با قابلیت کنترل Progress  &lt;/h3&gt;

&lt;p&gt;یکی از قابلیت های کاربردی که Lottie در اختیار شما میگذاره، اینه که شما بتونید روند یا Progress انیمیشنتون رو کنترل کنید. هر انیمیشنی شامل یک بازه &lt;strong&gt;0.0&lt;/strong&gt; تا &lt;strong&gt;1.0&lt;/strong&gt; میشه (اشاره به همون ۰ تا ۱۰۰ درصد داره)، برای اینکه بتونید مشخص کنید که انیمیشنتون از کجا شروع بشه، یا اینکه الان در کدوم فریم باشه، فقط کافیه متد &lt;code class=&quot;highlighter-rouge&quot;&gt;setProgress(floatValue)&lt;/code&gt; رو صدا زده و مقدار مورد نظر رو بهش بدید.&lt;/p&gt;

&lt;p&gt;من برای اینکه این تمرین رو انجام بدم، یه seekBar در لی‌اَوت‌م گذاشتم، و با &lt;strong&gt;onProgressChanged&lt;/strong&gt; اون رو ردیابی کرده،‌ و به ازای هر تغییر، مقدار &lt;code class=&quot;highlighter-rouge&quot;&gt;((float)progress)/100&lt;/code&gt; رو به progress انیمیشنمون مقداردهی میکنم:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;seekBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setOnSeekBarChangeListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeekBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OnSeekBarChangeListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onProgressChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SeekBar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seekBar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fromUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;animation_view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;و خب، نتیجش میشه این:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/lottie-anim-1.gif&quot; alt=&quot;Lottie Progress Animation Demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;شما حتی میتونین برای انیمیشنتون یه رنج هم تعریف کنید. در &lt;a href=&quot;#lottie-animated-button&quot;&gt;بخش بعدی&lt;/a&gt; بصورت عینی در مورد این موضوع مثال زدم.&lt;/p&gt;

&lt;p&gt;و آدرس تمامی کدهای و نمونه‌هایی که در این قسمت پیاده کردیم:&lt;/p&gt;

&lt;div class=&quot;div-ltr&quot;&gt;

  &lt;p&gt;&lt;strong&gt;Get it from github:&lt;/strong&gt; &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/java/com/isapanah/lottieeexampleproject/ProgressAnimation.java&quot;&gt;Class&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/res/layout/progress_animation.xml&quot;&gt;Layout&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/starwars.json&quot;&gt;JSON Animation&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lottie-animated-button&quot;&gt;4.  پیاده‌سازی دکمه‌های انیمیشنی&lt;/h3&gt;

&lt;p&gt;یکی از مواردی که خیلی در زیبایی و تجربه کاربری لذت‌بخش تاثیر داره و در &lt;a href=&quot;https://material.io/guidelines/motion/material-motion.html&quot;&gt;منابع متریال&lt;/a&gt; هم به اون اشاره شده، استفاده کردن از دکمه‌هاییه که افکت‌های انیمیشنی دارند. برای مثال همبرگر منويي که با کلیک میچرخه و از Hamburger به Back Button تبدیل میشه.&lt;/p&gt;

&lt;p&gt;سوال اینجاست که چطوری باید همچین چیزی رو طراحی کنیم!؟ بگذارید موضوع رو ساده کنیم، ما یه انیمیشن از دکمه سوییچ داریم. این انیمیشن از پراگرس &lt;strong&gt;0.0&lt;/strong&gt; تا &lt;strong&gt;0.5&lt;/strong&gt; نشون میده که سوییچ &lt;code class=&quot;highlighter-rouge&quot;&gt;On&lt;/code&gt; میشه، و از پراگرس &lt;strong&gt;0.5&lt;/strong&gt; تا &lt;strong&gt;1.0&lt;/strong&gt; نشون میده که سوییچ &lt;code class=&quot;highlighter-rouge&quot;&gt;Off&lt;/code&gt; میشه.&lt;/p&gt;

&lt;p&gt;حالا موقعی که کاربر سویچ on رو تپ کرد، انیمیشن رو از پراگرس &lt;strong&gt;0.0&lt;/strong&gt; به &lt;strong&gt;0.5&lt;/strong&gt; انیمیت می‌کنیم. و وقتی سویچ رو off کرد، میتونیم ۲ کار انجام بدیم:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;یا انیمیشن رو از 0.5 به 1.0، انیمیت کنیم.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;یا اینکه انیمیشن رو بصورت &lt;strong&gt;reverse&lt;/strong&gt; پخش کنیم. یعنی پراگرس از 0.5 به 0.0 انیمیت میشه.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;من در نمونه اپلیکیشنی که در گیتهاب گذاشتم، چند مثال در این مورد آوردم:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;دکمه سوییچ:&lt;/strong&gt; در این مثال من یه مقدار بولین به اسم &lt;code class=&quot;highlighter-rouge&quot;&gt;switchIsOn&lt;/code&gt; ایجاد کردم تا باز یا بسته بودن سوییچ رو بتونم دنبال کنم. وقتی که کاربر کلیک کرد یکبار متد &lt;code class=&quot;highlighter-rouge&quot;&gt;playAnimation()&lt;/code&gt; و دفعه بعد &lt;code class=&quot;highlighter-rouge&quot;&gt;reverseAnimation()&lt;/code&gt; رو صدا میزنم.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;switchIsOn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animatedSwitchButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reverseAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;switchIsOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animatedSwitchButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;playAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;switchIsOn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;همبرگر منو:&lt;/strong&gt; در این مثال بازم هم من یه مقدار بولین برای دنبال کردن باز/بسته بودن منو درست کردم. حالا موقع بازشدن همبرگر منو، با استفاده از کلاس &lt;code class=&quot;highlighter-rouge&quot;&gt;ValueAnimator&lt;/code&gt; یک رنج از پراگرس ایجاد کرده &lt;code class=&quot;highlighter-rouge&quot;&gt;(0.05f, 0.45f)&lt;/code&gt; و مقداری هم برای مدت زمان سپری کردن این انیمیشن تعریف میکنم &lt;code class=&quot;highlighter-rouge&quot;&gt;setDuration(2000)&lt;/code&gt;. برای بسته شدن همبرگر منو هم، یه رنج دیگه با مقادیری بلعکس ایجاد کردم. خب، از الان هربار که کاربر روی دکمه کلیک کنه، انیمیشن نمایش داده میشه و انگار که منو باز و بسته میشه.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//With ValueAnimator&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ValueAnimator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hamburgerIsOpen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ValueAnimator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofFloat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.05f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.45f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hamburgerIsOpen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ValueAnimator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofFloat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.45f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hamburgerIsOpen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;animator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addUpdateListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ValueAnimator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AnimatorUpdateListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValueAnimator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;animatedHamburger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnimatedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;دکمه رادیو:&lt;/strong&gt; در مورد کیس رادیو باتن هم برای اکتیو کردن سلکشن، یکبار انیمیشن کامل به نمایش درمیاد، بار دوم که کاربر کلیک میکنه، پراگرس روی &lt;strong&gt;0.0&lt;/strong&gt; یعنی موقعی که رادیو انتخاب نشده بود سِت میشه. و این روند همینجوری ادامه خواهد داشت.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animatedRadioButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animatedRadioButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;playAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animatedRadioButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;دنبال کردن انیمیشن:&lt;/strong&gt; ما میتونیم هم &lt;strong&gt;مراحل&lt;/strong&gt; و هم &lt;strong&gt;روند&lt;/strong&gt; انیمیشنمون رو دنبال کنیم. برای مثال من در مورد کیس دکمه قطع صدا، میخواستم وقتی که انیمیشن تموم شد یه Toast نشون بدم و به کاربر بگم که صدا تموم شد. برای همین متد &lt;code class=&quot;highlighter-rouge&quot;&gt;addAnimatorListener&lt;/code&gt; رو برای ویوومون تعریف کردم که به ما ۴تا متد دیگه میده:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;onAnimationStart&lt;/code&gt; هنگام شروع انیمیشن&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;onAnimationEnd&lt;/code&gt; هنگام پایان انیمیشن&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;onAnimationCancel&lt;/code&gt; هنگام لغو شدن انیمیشن&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;onAnimationRepeat&lt;/code&gt; هنگام تکرار انیمیشن&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;پس من هم از &lt;code class=&quot;highlighter-rouge&quot;&gt;onAnimationEnd&lt;/code&gt; استفاده کردم و موقعی که انیمیشن تموم میشه به کاربر میگم که صدا قطع شد یا وصل شد.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Animator Listener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animatedMuteButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAnimatorListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AnimatorListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Animator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationEnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Animator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InteractionAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isMute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sound is mute.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sound isn't mute.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Toast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_SHORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationCancel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Animator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationRepeat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Animator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ایطوری میتونید مراحل و مقاطع انیمیشن رو دنبال کنید. خب یه وقتایی هم هست که نیازه تا روند اپلیکیشن رو دنبال کنیم. برای اینکه این قضیه رو واستون روشن کنم از‌ انیمیشن یه ساعت استفاده کردم، میخوام به فلان تایم یا فلان درصد از پراگرس که رسید، رنگش عوض بشه. وقتی هم که زمان تموم شد، یه اسنک نشون بده که زمانت تموم شده. برای این لازمه که هرلحظه بدونم در چه درصدی از انیمیشن قرار داریم. واسه پیاده کردن این موضو از متدی به اسم &lt;code class=&quot;highlighter-rouge&quot;&gt;addAnimatorUpdateListener&lt;/code&gt; برای ترک کردن هربار آپدیت شدن یا تغییر کرد یکی از مشخصه های انیمیشن استفاده میکنیم (که ساده‌ترینش همین تغییر پراگرس هست). یه سری &lt;strong&gt;if&lt;/strong&gt; هم گذاشتم و با &lt;code class=&quot;highlighter-rouge&quot;&gt;getAnimatedValue()&lt;/code&gt; چک کردم که اگه در فلان بازه ای قرار گرفت، رنگش تغییر کنه یا اسنک نشون بده. که نهایتا شد این:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Animator Update Listener&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;animatedWatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAnimatorUpdateListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ValueAnimator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AnimatorUpdateListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onAnimationUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValueAnimator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnimatedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;animatedWatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnimatedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnimatedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;animatedWatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAGENTA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnimatedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnimatedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;animatedWatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CYAN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;animatedWatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuffColorFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PorterDuff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;SRC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAnimatedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.93f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Snackbar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;Oh My Lottie, your time is finished!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Snackbar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LENGTH_LONG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;خب فکر میکنم تمام چیزهایی که در این بخش لازم بود رو گفتم. حالا میتونید باقی سناریوهارو بر اساس همین‌ تمرین پیاده کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/lottie-anim-2.gif&quot; alt=&quot;Lottie Interaction With User Demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;و آدرس تمامی کدهای و نمونه‌هایی که در این قسمت پیاده کردیم:&lt;/p&gt;

&lt;div class=&quot;div-ltr&quot;&gt;

  &lt;p&gt;&lt;strong&gt;Get it from github:&lt;/strong&gt; &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/java/com/isapanah/lottieeexampleproject/InteractionAnimation.java&quot;&gt;Class&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/res/layout/interaction_animation.xml&quot;&gt;Layout&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;JSON Animations:&lt;/strong&gt;&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/radio_button.json&quot;&gt;radio_button&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/switch.json&quot;&gt;switch&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/hamburger.json&quot;&gt;hamburger&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/mute.json&quot;&gt;mute&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/watch.json&quot;&gt;watch&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lottie-animated-font&quot;&gt;5.  پیاده سازی فونت انیمیشنی&lt;/h3&gt;

&lt;p&gt;فونت انیمیشنی، یکی از چیزهای جالبی که لاتی داشت و بنده خیلی درد کشیدم تا پیادش کنم! قبل از شروع این قسمت دعوت میکنم با دیدن انیمیشن زیر، با این پدیده آشنا بشید:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/lottie-anim-3.gif&quot; alt=&quot;Lottie Animation Font Demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;اما واقعا چطوری یه همچین چیزیو میشه درست کرد؟ اجازه بدید تا تکنیک این بخش رو تشریح کنم.&lt;/p&gt;

&lt;p&gt;مایه پوشه داریم که درون این پوشه به ازای هر حرف از حروف الفبا، یه انیمیشن وجود داره، مثلا یه انیمیشنی که انیمیت میشه تا حرف A رو نشون بده. ازونور ما گوش میدیم و هروقت که یه حرف از حروف الفبا تایپ شد، ما هم انیمیشنش رو پیدا کرده و به متن نوشته شده قبلی ( درواقع انیمیشن های بهم چسبیده قبلی) اضافه میکنم. یه انیمیشن هم واسه cursor داریم که مثلا نشون میده نشانه نوشتار ما الان کجاست. به همین سادگی.&lt;/p&gt;

&lt;p&gt;خب، اول از همه نیازه که یه کلاس ایجاد کنیم به اسم &lt;strong&gt;LottieFontViewGroup&lt;/strong&gt; که از FrameLayout اکستند شده و نگهدارنده انیمیشن‌های ماست. این کلاس برای ما ۳تا کار انجام میده:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ایجاد ویوو برای ادیتور متن&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ثبت کردن اکشن ها به عنوان انیمیشن (مثل نشانگر، حروف و خط فاصله)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;نگهدارندی و کنترل کردن انیمیشن ها&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;نمونه ای که الان در گیتهاب خود Lottie هست، با زبان کاتلین نوشته شده &lt;a href=&quot;https://github.com/airbnb/lottie-android/blob/master/LottieSample/src/main/kotlin/com/airbnb/lottie/samples/LottieFontViewGroup.kt&quot;&gt;LottieFontViewGroup.kt&lt;/a&gt; و من همون نمونه رو به جاوا کمی تغییر دادم و سایز فونت‌هارو اصلاح کردم و نهایت گذاشتمش توی گیتهاب همین پروژه که از اینجا میتونید &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/java/com/isapanah/lottieeexampleproject/LottieFontViewGroup.java&quot;&gt;LottieFontViewGroup.java&lt;/a&gt; دریافتش کنید.&lt;/p&gt;

&lt;p&gt;خب، فقط کافیه که ویوو مربوطه رو در لایه ای که مد نظرتون هست قرار بدید، بدون اینکه نیاز باشه با چیز دیگه‌ای درگیر بشین.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.example.yourproject.LottieFontViewGroup&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/fontView&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ممکنه بپرسین این فونت انیمیشنی به چه دردی میخوره؟ شاید خود ادیتورش بدردتون نخوره، ولی میتونید ازش استفاده کنید و متنی که دلتون میخواد (مثلا اسم شرکت یا پروژه) رو بصورت انیمیشنی به کاربر نمایش بدید.&lt;/p&gt;

&lt;p&gt;میتونید از فونت دیگه ای هم استفاه کنید؟ صد در صد، فقط باید زحمت طراحی انیمیشن برای تمامی حروف رو خودتون بکشید :)) چون غیر از همین نمونه ای که روی وب بود، چیز دیگه ای پیدا نکردم.&lt;/p&gt;

&lt;p&gt;و آدرس تمامی کدهای و نمونه‌هایی که در این قسمت پیاده کردیم:&lt;/p&gt;

&lt;div class=&quot;div-ltr&quot;&gt;

  &lt;p&gt;&lt;strong&gt;Get it from github:&lt;/strong&gt; &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/java/com/isapanah/lottieeexampleproject/LottieFontViewGroup.java&quot;&gt;LottieFontViewGroup&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/java/com/isapanah/lottieeexampleproject/AnimatedFont.java&quot;&gt;Class&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/res/layout/activity_typography_demo.xml&quot;&gt;Layout&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/tree/master/app/src/main/assets/Mobilo&quot;&gt;Animation Font Folder&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lottie-intro&quot;&gt;6.  طراحی صفحه خوش‌آمد گویی با انیمیشن&lt;/h3&gt;

&lt;p&gt;و تمرین آخر، در این قسمت میخواهیم یک صفحه خوش‌آمدی گویی، Intro یا OnBoarding بسازیم.&lt;/p&gt;

&lt;p&gt;اول بیایم منطق قضیه رو باهم بررسی کنیم. در این پروژه به یک فایل انیمیشن که شامل تمامی مراحل Intro باشه نیاز داریم. هر مرحله یک آغاز و پایانی داره و ما باید زمان شروع و پایان تمامی مراحل رو در بیاریم، برای مثال صفحه دوم Intro از پراگرس 0.25 شروع و در 0.42 تموم میشه. حالا موقعی که کاربر Swipe میکنه یا روی دکمه ‘بعدی’ کلیک میکنه ما هم همگام با اسکرول شدن صفحه، پراگرس انیمیشن رو به همون نسبت جلو میبریم.&lt;/p&gt;

&lt;p&gt;در این تمرین برای صفحه خوش‌امدگویی از لایبرری &lt;a href=&quot;https://github.com/MatthewTamlin/SlidingIntroScreen&quot;&gt;SlidingIntroScreen&lt;/a&gt; و انیمیشن &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/services_intro.json&quot;&gt;services_intro&lt;/a&gt; استفاده کردم. و زمان تمامی مراحل انیمیشن رو به ترتیب زیر لیست کردم:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMATION_TIMES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;
    &lt;span class=&quot;mf&quot;&gt;0.06f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mf&quot;&gt;0.25f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mf&quot;&gt;0.42f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mf&quot;&gt;0.57f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mf&quot;&gt;0.71f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mf&quot;&gt;0.9f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;توجه کنید که ۲ مقدار پایانی باید با پراگرس آخری یکی باشن، تا موقع اسکرول کردن آرایه سرریز نکنه.&lt;/p&gt;

&lt;p&gt;و بعدش هم به تعداد صفحاتی که قرار اسکرول کنیم نمونه ساختم:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Fragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generatePages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savedInstanceState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EmptyFragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EmptyFragment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}};&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;هرموقع که صفحه خوش‌آمدگویی درحال اسکرول شد، متد setAnimationProgress صدا میزنم، در این متد مقدار پاگرس فعلی و بعدی رو میگیرم و مقدار اسکرول رو هم داریم و میزان پراگرس رو به انیمیشنمون اضافه میکنم:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setAnimationProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;positionOffset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startProgress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMATION_TIMES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endProgress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ANIMATION_TIMES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lerp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endProgress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;positionOffset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;برای اینکه انیمیشنمون تمیز و زیبا انجام بشه از متدی به نام lerp استفاده میکنیم. این متد بهمون کمک میکنه که زمان انیمیشنمون رو متناسب به مقدار اسکرولی که انجام شده جلو ببریم و این تغییر انیمیشن‌ها با نرمی بیشتری انجام بشه:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lerp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;خب تمومه. حالا یه صفحه خوش‌امد گویی ترو تمیز داریم. و اینم کاریه که انجام دادیم:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-08-10/lottie-anim-4.gif&quot; alt=&quot;Lottie Intro Animation Demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;از همین متد میتونید توی بقیه لایبرری هایی که کار Intro یا onBoarding رو انجام میدن استفاده کنید.&lt;/p&gt;

&lt;p&gt;و آدرس تمامی کدهای و نمونه‌هایی که در این قسمت پیاده کردیم:&lt;/p&gt;

&lt;div class=&quot;div-ltr&quot;&gt;

  &lt;p&gt;&lt;strong&gt;Get it from github:&lt;/strong&gt; &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/java/com/isapanah/lottieeexampleproject/AppIntroActivity.java&quot;&gt;AppIntroActivity&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/res/layout/app_intro_animation_view.xml&quot;&gt;app_intro_animation_view&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/res/layout/fragment_empty.xml&quot;&gt;fragment_empty&lt;/a&gt; / &lt;a href=&quot;https://github.com/sadra/LottieExampleProject/blob/master/app/src/main/assets/services_intro.json&quot;&gt;JSON Animation&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lottie-tips&quot;&gt;7.  نکات مهم&lt;/h3&gt;

&lt;p&gt;در ادامه مطلب قصد دارم نکاتی درباره استفاده از لایبرری Lottie به شما یادآور بشم:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;استفاده از انیمیشن‌های آماده:&lt;/strong&gt; همونطور که در بخش‌های ابتدایی ذکر کرده بودم، شما متیونید از انمیمیشن‌های آماده در پروژتون استفاده کنید. توجه کنید که بعضی از این اینیمیشن‌ها ناقص هستند یا مشکلی دارند. فقط چند مورد مثال میزنم.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;فضای خالی دور انیمیشن:&lt;/strong&gt; بعضی از انیمیشن ها مثل &lt;a href=&quot;https://www.lottiefiles.com/425-bold-button&quot;&gt;این&lt;/a&gt;، &lt;a href=&quot;https://www.lottiefiles.com/422-onoff-switch-2&quot;&gt;این&lt;/a&gt; و &lt;a href=&quot;https://www.lottiefiles.com/416-thumbs-up&quot;&gt;این&lt;/a&gt; حدودا به اندازه ۵۰۰پیکسلِ مربع فضای خالیه اطرافشون! خیلی سعی کردم با خود فایل JSON ور برم و از فضای خالیش کم کنم، اما نشد که نشد. وقتی ازینها در پروژه استفاده می‌کنید ممکنه بیش از حد کوچیک به نظر بیان. تنها راه حلی که به ذهنم رسید این بود که ویوو انیمیشن رو اسکیل بدم. متاسفانه این اسکیل دادن در بعضی مواقع باعث میشه که انیمیشن پیکسله بشه.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.airbnb.lottie.LottieAnimationView&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/animatedView&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:scaleX=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.5&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:scaleY=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.5&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;60dp&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;60dp&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;تکرار بی‌جهت انیمیشن:&lt;/strong&gt; در بعضی انیمیشن‌ها مثل &lt;a href=&quot;https://www.lottiefiles.com/334-bamburge&quot;&gt;این&lt;/a&gt; و &lt;a href=&quot;https://www.lottiefiles.com/444-mute&quot;&gt;این&lt;/a&gt; دیده شده که انیمیشن بعد از پایان، دوباره تا چند فریم حرکت اضافی داره! دو راه پیش پای ماست، یا اینکه رنج شروع و پایان برای انیمیشن تعریف کنیم. یا اینکه در فایل JSON انیمیشن دست ببریم. اما چطوری. هر فایل JSON انیمیشنی رو که باز کنید، دارای دو پارامتر ip و op هستند. ip نشون دهنده فریم شروع کننده انمیشین و op نشون دهنده فریم پایانی انیمیشن هست. با تغییر این دو فاکتور در فایل JSON میتونید شروع و پایان انیمیشنتون رو دستکاری کنید.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;op&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;27.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;استفاده از AnimatedVectorDrawable:&lt;/strong&gt; همین چند روز پیش بود که نیک بوچر در &lt;a href=&quot;https://medium.com/google-design/bodymovin-to-android-6e53e5f7a96&quot;&gt;وبلاگش نوشت&lt;/a&gt; که با استفاده از نسخه ۴ پلاگین BodyMovin میتونین برای AVD مستقیما خروجی بگیرین. باین اوصاف یعنی دیگه نیازی به Lottie نیست؟ خیر، شما فعلا فقط میتونید اون خروجی رو نمایش بدید. اما این دلیل نمیشه که تمام امکاناتی که Lottie داره، AVD هم داشته باشه. سعی میکنم در یه پست جداگانه نحوه استفاده از AVD رو هم آموزش بدم اما الان فقط میخوام به خواص هرکدوم اشاره میکنم:&lt;/p&gt;

&lt;p&gt;خوبی‌های Lottie:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;بیشتر از هر لایبرری و پلاگین دیگه از انیمیشن‌های افترافکت پشتیبانی میکنه&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;شما دسترسی کاملا دستی و Manual به انیمیشن دارید و میتونید eventها و کلیک‌هارو مدیریت کنید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;میتونید خود فایل رو مستقیما از اینترنت دریافت کرده و نمایش بدید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;میتونید بصورت برعکس پخش کنید و سرعتشو کنترل کنید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;با در اختیار گذاشتن پراگرس شما میتونید حتی نحوه پخش انیمیشن رو هم مدیریت کنید&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;خوبی AVD:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;انیمیشن با سرعت و پرفرمنس بهتری در &lt;a href=&quot;https://medium.com/@workingkills/understanding-the-renderthread-4dc17bcaf979&quot;&gt;Render Thread&lt;/a&gt; نسبت به Main Thread اجرا میشه.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;پشتیبانی از AfterEffect:&lt;/strong&gt; لایبرری لاتی یه &lt;a href=&quot;http://airbnb.io/lottie/supported-features.html&quot;&gt;لیست&lt;/a&gt; از انیمیشن‌ها و افکت‌هایی از افترافکت که پشتیبانی می‌کنه آماده کرده. قبل از طراحی انیمیشن در AfterEffect حتما این &lt;a href=&quot;http://airbnb.io/lottie/supported-features.html&quot;&gt;فیچر‌ها&lt;/a&gt; رو بررسی کنید تا خدای نکرده انیمیشنتون ناقص اجرا نشه.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;سایز انیمیشن:&lt;/strong&gt; اگه براتون سوال بوجود اومد که سایز انیمیشن هارو چطوری ست کنم؟ بهتون پیشنهاد میکنم این &lt;a href=&quot;https://material.io/devices/&quot;&gt;چیت شیت&lt;/a&gt; از متریال رو مطالعه کنید تا دستتون بیاد که چه سایز px رو باید برای انیمیشنهاتون تا در اندروید با سایز dp همخونی داشته باشه.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;کش کردن انیمیشن:&lt;/strong&gt; ممکنه بعضی از انیمیشن‌ها به کَرّات استفاده بشه. برای اینکار حتما برای انیمیشنتون CacheStartegy رو فعال کنید. CacheStrategy رو بر اساس میزان استفاده‌تون میتونید روی ۳ حالت &lt;code class=&quot;highlighter-rouge&quot;&gt;Strong&lt;/code&gt; ، &lt;code class=&quot;highlighter-rouge&quot;&gt;Weak&lt;/code&gt; و &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;/code&gt; قرار بدید.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;lottieView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LottieAnimationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findViewById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;simpleAnimation_lottieView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lottieView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAnimation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gift.json&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LottieAnimationView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CacheStrategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Strong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;رنگ دادن به یک لایه خاص از انیمیشن&lt;/strong&gt;: مشابه مثالی که در بخش اول زدم، ممکنه شما بخوایید رنگ یک لایه خاص از انیمیشنتون رو تغییر بدید. مثلا در همون مثال ما رنگ بدنه و درپوش جعبه کادو رو تغییر دادیم. اما برای این کار، اگر انیمیشنتون رو خودتون طراحی کردین، میدونید که اسم لایه‌هاتون چیه و اسم لایه مورد نظر رو میبرید و رنگ بهش الصاق میشه. اما اگر از فایل آماده برای انیمیشنتون استفاده کردین، باید فایل JSON رو باز کرده و ببنید کدوم پارامتر‌ها با لیبل &lt;code class=&quot;highlighter-rouge&quot;&gt;nm&lt;/code&gt; مشخص شدن و دونه دونه اونهارو سعی و خطا تست کنید تا معلوم بشه کدومشون لایه مورد نظر شماست. برای مثال همین جعه دو لایه به نام های &lt;code class=&quot;highlighter-rouge&quot;&gt;body Konturen&lt;/code&gt; و &lt;code class=&quot;highlighter-rouge&quot;&gt;top Konturen&lt;/code&gt; اشاره به درپوش و بدنه جعبه داشت که پیدا کرده و رنگ رو بهش الصاق کردیم.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;//gift.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ddd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ind&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;nm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body Konturen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ddd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ind&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;nm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;top Konturen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;زمان بندی در انیمیشن خوش‌آمدگویی:&lt;/strong&gt; اگه یادتون باشه در اون بخش گفتم که انیمیشن به نسبت اسکرول جلو و عقب میره. میدونیم که میزان فاصله دو صفحه از یک Viepager همیشه یکتا و بین همه صفحات مساویه. پس شما هم سعی کنید در انیمیشنی که طراحی میکنید این قانون رو نظر داشته باشید. اگه به همین انیمیشن دقت کنید  در بعضی بخشها سریع و در بعضی دیگه کند به نمایش درمیومد، دلیلش هم عدم توازن زمانی بین دو تغییر انیمیشن بود.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;آپدیت: این بخش در صورت مواجه شدن با مسايل جدید ممکنه به‌روزرسانی بشه.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lottie-final&quot;&gt;8.  صحبت پایانی&lt;/h3&gt;

&lt;p&gt;این بلندترین پستی بود که تا به امروز نوشتم. چیزی نزدیک به 29هزار کَرکتر. امیدوارم این پست بدردتون خورده باشه. متن خیلی طولانیه، برای همین در بالای صفحه فهرستی از عنوانها آماده کردم تا شما به راحتی تونید به بخش‌های که میخوایید مراجعه کنید.&lt;/p&gt;

&lt;p&gt;اگه قصد داشتین از این پست در وبلاگتون استفاده کنید، درخواست میکنم حتما به همین پست و بخش مربوطه رفرنس بدید ^_^&lt;/p&gt;

&lt;p&gt;و در آخر من کامنت‌های وبلاگ رو بستم و دوست دارم با شما در شبکه‌های اجتماعی تعامل داشته باشم. اگر سوال یا موردی بود در &lt;a href=&quot;https://twitter.com/sadra_amlashi&quot;&gt;توییتر&lt;/a&gt; مطرح کرده و من رو با آیدی &lt;a href=&quot;https://twitter.com/sadra_amlashi&quot;&gt;@sadra_amlashi&lt;/a&gt; منشن کنید. متشکرم.&lt;/p&gt;</content><author><name>صدرا املشی</name></author><category term="Android" /><category term="UI" /><category term="Animation" /><category term="Lottie" /><summary type="html">همونطور که قبلا بهتون در پست “ استفاده از انیمیشن در توسعه اپلیکیشن “ قول داده بودم، در این پست قراره به آموزش استفاده از لایبرری Lottie و اضافه کردن منابع بصری انیمه به پروژه اندروید بپردازیم.</summary></entry><entry><title type="html">استفاده از انیمیشن در توسعه اپلیکیشن</title><link href="http://isapanah.com/2017/oh-my-lottie" rel="alternate" type="text/html" title="استفاده از انیمیشن در توسعه اپلیکیشن" /><published>2017-07-26T00:00:00+04:30</published><updated>2017-07-26T00:00:00+04:30</updated><id>http://isapanah.com/2017/oh-my-lottie</id><content type="html" xml:base="http://isapanah.com/2017/oh-my-lottie">&lt;p&gt;یکی از موضوعاتی که چندوقت اخیر ذهن منو مشغول کرده بود، این بوده که بتونم از منابع گرافیکی و انیمیشن‌های پیچیده در پروژم استفاده کنم. ولی هربار پیگیری این قضیه رو عقب مینداختم. تا اینکه دیروز &lt;a href=&quot;https://www.instagram.com/farid_landi&quot;&gt;فرید&lt;/a&gt; ازم پرسید آیا برای این قضیه راه حلی دارم؟ و این موضوع بهونه‌ای شد، تا با &lt;a href=&quot;http://dcamp.ir/&quot;&gt;شایان&lt;/a&gt; دنبال یه سرویس خوب بگردیم. امروز قصد ندارم کد‌نویسی کنم و فقط میخوام مورادی که پیدا کردیم رو به شما معرفی کنم.&lt;/p&gt;

&lt;h2 id=&quot;لایبرری-اندروید-glide&quot;&gt;لایبرری اندروید Glide&lt;/h2&gt;

&lt;p&gt;لایبرری &lt;a href=&quot;https://github.com/bumptech/glide&quot;&gt;Glide&lt;/a&gt; یکی از گزینه‌ها برای استفاده از انیمیشن (یا همون فایل gif) در پروژه اندرویده. و استفاده کردن از اون هم خیلی ساده ست:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;فقط لایبرری رو به پروژتون اضافه میکنید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;و بعد ویو رو به لی‌اَوت‌-تون اضافه می‌کنید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;و در آخر ویوو رو در کلاستون کَست کرده و انیمیشن خودتون رو بهش معرفی میکنید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;در نهایت این میشه نتیجش&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-10.gif&quot; alt=&quot;Glide Result&quot; /&gt;&lt;/p&gt;

&lt;p&gt;این لایبرری علاوه بر همه خوبیهاش، مشکلاتی هم داره:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;میزان استفاده از رم رو به شدت بالا میبره&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;شما کنترل مناسبی روی انیمیشن ندارید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;و موقع Scale شدن انیمه، ممکنه تصویرتون پیکسله بشه&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;محیط-توسعه-supernova-studio&quot;&gt;محیط توسعه SuperNova Studio&lt;/h2&gt;

&lt;p&gt;این ابزار چیزی شبیه Sketch ست. با این تفاوت که میتونید از تمام لایه‌هایی که در این محیط طراحی میکنید، بصورت Native خروجی گرفته و در پروژتون،‌ ایمپورتش کنید.&lt;/p&gt;

&lt;p&gt;با استفاده از ابزارهای زیادی که &lt;a href=&quot;https://supernova.studio/&quot;&gt;SuperNova Studio&lt;/a&gt; در اختیارتون گذشته، شما میتونید برای سه پلتفرم Android ، iOS و React خروجی بگیرید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-2.png&quot; alt=&quot;SuperNova Studio&quot; /&gt;&lt;/p&gt;

&lt;p&gt;سوپرنوا این امکان رو به شما میده که بتونید قبل از ورود به مرحله توسعه،‌در داخل همون استدیو، لایه‌هاتون رو تست بگیرید. این امکان وجود داره که پیشنمایش لایه‌ها در هر سایزی روی شبیه ساز Android ، iOS و البته مرورگر، اجرا کنید. این ابزار به شما کمک میکنه که قبل از شروع به نوشتن حتی یک خط کد، از UI و UX اپتون مطمئن بشید.&lt;/p&gt;

&lt;p&gt;چرا راجع به SuperNova گفتم؟ برای اینکه در محیط توسعه این استدیو، میتونید انیمیشن‌های خودتون رو پیاده سازی کرده و خروجی که دریافت میکنید رو عینا توی پروژتون استفاده کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-3.png&quot; alt=&quot;SuperNova Studio&quot; /&gt;&lt;/p&gt;

&lt;p&gt;لازم به ذکره که هنوز خودم از این سرویس استفاده نکردم و چیزهایی که گفتم بعضا از روی داکیومنتهاش و ویدئوهایی بود که درباره استدیوشون منتشر کردند. SuperNova Studio الان در نسخه بتاست و شما میتونید به رایگان دانلود کرده و ازش استفاده کنید.&lt;/p&gt;

&lt;h2 id=&quot;فریمورک-متن-باز-lottie&quot;&gt;فریم‌ورک متن باز Lottie&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;لاتی&lt;/strong&gt;، نخونید &lt;strong&gt;لوتی&lt;/strong&gt;! چیزیه که من اینهمه واسش سروصدا راه انداختم! فریم ورک &lt;a href=&quot;https://airbnb.design/lottie/&quot;&gt;Lottie&lt;/a&gt;، دقیقا همه‌ی همونچیزیه که ما بهش احتیاج داشتیم. یا بهتر بگم،‌ فریم‌ورک‌های قبل از تو، سؤتفاهم بود :))&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-9.png&quot; alt=&quot;Lottie&quot; /&gt;&lt;/p&gt;

&lt;p&gt; لاتی به همین سادگیه:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;منابع گرافیکی‌تو در After Effect بساز&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ازش خروجی JSON بگیر&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;حالا Lottie بهت کمک میکنه که در iOS، Android و ReactNative از اون استفاده کنی.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;لاتی چیه؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;لاتی یک فریم‌ورک رایگان و متن بازه که توسط بروبچه‌های &lt;a href=&quot;https://airbnb.design&quot;&gt;AirBnb&lt;/a&gt; توسعه داده شده. تا قبل از این برای استفاده کردن از انیمیشن‌های پیچیده، مجبور بودیم کلی کدهای مسخره و پیچیده رو بکار ببریم و کلی پروسه الکی به اپمون اضافه کنیم. حتی لازم بود واسه اینکه انیمه ها پیکسله نشن، برای هر نمونهِ انیمه، در سایزهای مختلف خروجی بگیریم و به پروژمون اضافه کنیم! یا اینکه هزارخط کد بنویسیم تا یه انیمیشن احمقانه رو پیاده کنیم :(&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-4.gif&quot; alt=&quot;Lottie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;با اینکه انیمیشن بسیار بسیار در زیبا شدن اپ و بالا بردن تجربه کاربری کمک میکنه، اما بخاطر همین مشکلات خیلی از توسعه دهنده ها کلا از انیمیشن استفاده نمیکنند و تنها به همون منابع محدودی که خود محیط توسعه در اختیارشون میگذاره، بسنده میکنن! اما AirBnb کلا این تصور و تفکر رو تغییر داد.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ماجرای Lottie&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;لاتی ابزاریه که به شما کمک میکنه تا بدون محدودیت، منابع گرافیکی رندر شده در افترافکت رو خروجی بگیرین و بصورت Native در iOS ، Android و ReactNative استفاده کنید. سال ۲۰۱۵ بود که &lt;a href=&quot;https://twitter.com/airnanan&quot;&gt;Hernan Torrisi&lt;/a&gt; ایتالیایی یک افزونه برای افترافکت به نام &lt;a href=&quot;https://github.com/bodymovin/bodymovin&quot;&gt;BodyMovin&lt;/a&gt; ساخت، تا به کاربرا کمک کنه از پروژه هاشون بصورت HTML ، JSON و فرمتهای دیگه خروجی بگیرن.&lt;/p&gt;

&lt;p&gt;بعد از این بود که چهارنفر نفر از بروبچه‌های AirBnb تصمیم گرفتن تا با استفاده از اون فایل JSON شروع کنن برای هرسه پلتفرم، فریم‌ورک Lottie رو پیاده کنن. بدین صورت بود که ‌‌&lt;a href=&quot;http://github.com/buba447&quot;&gt;Brandon Withrow&lt;/a&gt; برای &lt;a href=&quot;https://github.com/airbnb/lottie-ios&quot;&gt;iOS&lt;/a&gt;، سپس &lt;a href=&quot;https://twitter.com/gpeal8&quot;&gt;Gabriel Peal&lt;/a&gt; برای &lt;a href=&quot;https://github.com/airbnb/lottie-android&quot;&gt;Android&lt;/a&gt; و بعدش &lt;a href=&quot;https://twitter.com/intelligibabble&quot;&gt;Leland Richardson&lt;/a&gt; برای &lt;a href=&quot;https://github.com/airbnb/lottie-react-native&quot;&gt;ReactNative&lt;/a&gt; این سرویس رو پیاده کردن. ناگفته نمونه که &lt;a href=&quot;https://twitter.com/therealsalih?lang=en&quot;&gt;Salih Abdul-Karim&lt;/a&gt; مدیریت این تیم و پیاده سازی User Experience رو بر عهده داشته. و اینجوری بود که Lottie خلق شد. و چقدر خوب این فریم‌روک پیاده شده.&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot;&gt;
    
    &lt;a href=&quot;#&quot; title=&quot;Salih Abdul-Karim&quot; target=&quot;_blank&quot;&gt;
        
        &lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-5.jpg&quot; alt=&quot;Salih Abdul-Karim&quot; /&gt;
        
    &lt;/a&gt;
    
    
    &lt;p class=&quot;image-caption&quot;&gt;صلیح عبدالکریم، جیگر منه :))&lt;/p&gt;
    
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;قالَ شایان: ازونجایی که دونفر از ۳ فاندر AirBnb طراح و گرافیست بودن، به همین دلیل به شدت روی گرافیک و منابع بصری سرویس‌هاشون تاکید و توجه ویژه ای داشتند. پس دور از ذهن نیست که چرا همچین چیزی مثل Lottie انقدر خوب، با کیفیت و کاربردی پیاده میشه.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;وقتی روزهای بد تموم میشن&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;روند کار همیشه اینطور بوده که تیم طراحی، طرح رابط کاربری اپ رو توی اسکچ یا فتوشاپ پیاده می‌کرد. و بعد طرح به توسعه دهنده سپرده میشد و ایشون هم بر اساس پروتوتایپی که دریافت کرده شروع به کد زدن میکرد:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;این پروسه معمولا خیلی طول میکشید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;و معمولا چیزی که پیاده میشد، با طرحی که زده شده بود، نسبتا اختلاف داشت&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;اوضاع وقتی بدتر میشد که در پروتوتایپ انیمیشن هم وجود داشت! اونوقت توسعه دهنده باید برای هر انیمیشن یه ریسورس تعریف کنه. اوضاع وقتی حزن‌انگیز میشه که انیمیشن پیچیده میشه در نتیجه باید برای Line art یه سری ریسورس، برای Charecter-based animation یه سری ریسورس، و برای Logo animation هم یه سری ریسورس دیگه تعریف کنه. تصور کنید وقتی که بخواید اینارو ریفکتور کنه یا تغییری در اونها بده. چقدر کد، چقدر فایل، چقدر زحمت و چقدر دردسر!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-7.gif&quot; alt=&quot;Lottie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;اما حالا طراح یکبار انیمیشن رو طراحی میکنه،‌ یه خروجی جیسون تحویل توسعه دهنده‌ها میده، و روی هرسه پلتفرم یک چیز واحد رو تحویل میگیره! هرموقع هم نیاز به تغییر بود، تو افترک‌افکت تغییرات انجا میشه و فایل جیسون پاس میشه به توسعه دهنده ها. به همین سادگی‌، به همین خوشمزگی!&lt;/p&gt;

&lt;p&gt;یکی از امکانات خوب لاتی اینه که به ما اجازه کنترل کامل ویوو ساخته شده رو میده. شما میتونید انیمه رو جلو برده یا برعکس شروع به پخش کنید (بشدت پرکاربرد در onboarding). و میتونید بر اساس اینترکت‌ی که کاربر با ویوو داره اون رو تغییر بدید، مثل همربرگر منو.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;یه راه حل انعطاف‌‌پذیر و کاربردی&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;دو ابزار دیگه مثل لاتی که کاربرد مشابهی دارن، &lt;a href=&quot;http://www.marcuseckert.com/squall/&quot;&gt;Squall&lt;/a&gt; که توسط &lt;a href=&quot;https://twitter.com/marcus_eckert&quot;&gt;Marcus Eckert&lt;/a&gt; توسعه داده شده و &lt;a href=&quot;https://github.com/facebookincubator/Keyframes&quot;&gt;Keyframes&lt;/a&gt; که محصولی از فیسبوکه. لایبرری Keyframes متاسفانه یه بخش کوچیکی از خصوصیات After Effect رو پشتیبانی میکنه و بیشتر روی interactionها تمرکز داره، درصورتی که ممکنه انیمیشن‌های ما خصوصیات خاصی داشته باشن و از ابزارهای پیچیده افترافکت در منابعمون استفاده شده باشه. برعکس Squall، بسیار ابزار خوب و کاملیه و اکثر خصوصیات پیاده شده در افترافکت رو پشتیبانی میکنه. با اینحال، متاسفانه فقط iOS رو پیشتیبانی میکنه. شاید جالب باشه بدونید که برو بچه های Lottie از خصوصیات و الگورتیم های Squall تو سرویسهاشون استفاده کردن، الالخصوص برای تفسیر و خوندن فایل جیسون که از AfterEffect خروجی گرفته شده.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-6.gif&quot; alt=&quot;Lottie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;علاوه بر اینها، لاتی امکانت دیگه هم داره تا سرویس رو هرچه بیشتر کاربردی کنه. برای مثال، شما میتونید فایلهای JSON رو مستقیما از روی وب فراخونی کنید، که خیلی خیلی خیلی برای A/B Testing مفید و کاربردیه. همینطور که قبلا گفتم شما میتونید کنترل کاملی روی انیمیشنتون داشته باشید، اون رو عقب (Reverse) جلو (Forward) کنید، یا سرعتش رو کم و زیاد کنید، موقع اینترکت با کاربر ظاهرش رو عوض کرده یا افکت‌های خاصی بهش بدید، همه اینها با یه نیم خط کد قابل پیاده‌سازیه.&lt;/p&gt;

&lt;p&gt;موضوع جالبتر میشه وقتی که بدونید شما در iOS میتونید بصورت Native از Lottie برای پیاده سازی ترنزیشن انیمیشن استفاده کنید، اونم انیمیشن‌های پیچیده.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;جامعه توسعه دهنده‌ها&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ازونجای که Lottie یه فریم‌ورک متن‌باز هست، تونسته یه جامعه قوی از طراح‌ها و توسعه‌دهندگان رو دور هم جمع کنه تا اونها با کمک همدیگه، هم بتونن Lottie رو ارتقاع بدن هم کلی ریسورس خوب و با کیفیت تولید کنن. اگه حال کار کردن با افترافکت رو ندارید، یا توی تیمتون گرافیست ماهر برای کار کردن با این ابزار موجود نیست، میتونید از انیمیشن‌های آماده استفاده کنید، اونها در &lt;a href=&quot;http://9-squares.tumblr.com/&quot;&gt;9Squares&lt;/a&gt;، &lt;a href=&quot;https://motioncorpse.tumblr.com/&quot;&gt;Motion Corpse&lt;/a&gt;، &lt;a href=&quot;https://animography.net/products/mobilo&quot;&gt;AnimoGraphy&lt;/a&gt; و &lt;a href=&quot;https://www.lottiefiles.com&quot;&gt;LottieFiles&lt;/a&gt; به راحتی در دسترس شما هستن&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2017-07-30/oh-my-lottie-8.gif&quot; alt=&quot;Lottie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;خب اینهمه تعریف کردی، حالا چطوری ازش استفاده کنم؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;برنامه من اینه که در این هفته جاری نحوه استفاده از Lottie رو در هرسه پلتفرم Android، iOS و ReactNative به شما نشون بدم. پس اگه تاحالا از این فریم‌ورک استفاده نکردین، منتظر پست‌های بعدی تو هفته جاری باشین. یا اگه استفاده کردین و جاییش مشکل یا سوالی دارین، در &lt;a href=&quot;https://twitter.com/intent/tweet?screen_name=sadra_amlashi&quot;&gt;توییتر&lt;/a&gt; من رو &lt;a href=&quot;https://twitter.com/intent/tweet?screen_name=sadra_amlashi&quot;&gt;منشن&lt;/a&gt; کنید و سوالتون رو بپرسید تا در پستهای بعدی ‌به اون موارد رو حتما بررسی کنم.&lt;/p&gt;</content><author><name>صدرا املشی</name></author><category term="Android" /><category term="iOS" /><category term="ReactNative" /><category term="UI" /><category term="Animation" /><category term="Lottie" /><summary type="html">یکی از موضوعاتی که چندوقت اخیر ذهن منو مشغول کرده بود، این بوده که بتونم از منابع گرافیکی و انیمیشن‌های پیچیده در پروژم استفاده کنم. ولی هربار پیگیری این قضیه رو عقب مینداختم. تا اینکه دیروز فرید ازم پرسید آیا برای این قضیه راه حلی دارم؟ و این موضوع بهونه‌ای شد، تا با شایان دنبال یه سرویس خوب بگردیم. امروز قصد ندارم کد‌نویسی کنم و فقط میخوام مورادی که پیدا کردیم رو به شما معرفی کنم.</summary></entry><entry><title type="html">گرفتن نام‌کاربری گیتهابی که توسط فرد دیگری قبلا ثبت شده</title><link href="http://isapanah.com/2017/how-getting-useless-github-username" rel="alternate" type="text/html" title="گرفتن نام‌کاربری گیتهابی که توسط فرد دیگری قبلا ثبت شده" /><published>2017-07-26T00:00:00+04:30</published><updated>2017-07-26T00:00:00+04:30</updated><id>http://isapanah.com/2017/how-getting-useless-github-username</id><content type="html" xml:base="http://isapanah.com/2017/how-getting-useless-github-username">&lt;p&gt;شاید براتون پیش اومده باشه که توی گیتهاب میخواستین یک نام کاربری ثبت کنین، اما این نام‌کاربری قبلا توسط یه نفر دیگه گرفته شده. اوضاع وقتی ضدحالتر میشه که، میبینی طرف فقط اون رو اشغال کرده و تابحال هیچ استفاده‌ای ازش نشده!&lt;/p&gt;

&lt;p&gt;برای من هم این موقعیت پیش اومده! قبلا حساب کاربری من در گیتهاب &lt;strong&gt;amlashi-sadra&lt;/strong&gt; بود، اما با راهنمایی یکی از دوستانم تونستم نام‌کاربری &lt;strong&gt;Sadra&lt;/strong&gt;، که توسط یه نفر دیگه رجیستر شده و البته بلااستفاده بود رو برای خودم ثبت کنم. اما چطوری؟&lt;/p&gt;

&lt;p&gt;بر اساس پستی که در راهنمای گیتهاب چندوقت پیش منتشر شد - &lt;a href=&quot;https://help.github.com/articles/name-squatting-policy/&quot;&gt;Name Squatting Policy&lt;/a&gt; - شما می‌تونید درخواست کنید اون نام‌کاربری بلا استفاده‌ای که اشغال شده رو تحویل شما بدن.&lt;/p&gt;

&lt;p&gt;برای اینکه یوزر Sadra رو بگیرم به &lt;a href=&quot;https://github.com/contact&quot;&gt;صفحه تماس&lt;/a&gt; گیتهاب رفتم و براشون نوشتم که من تو اکثر صفحه های اجتماعی این با این شناسه شناخته میشم و این نام‌کاربری از موقعی که اشغال شده هیچ فعالیتی نداشته و هزارتا بهوونه دیگه که بتونم نشون بدم من بیشتر استحقاق این دامنه رو دارم.&lt;/p&gt;

&lt;p&gt;بیشتر از ۱۵ دقیقه از پیام من نگذشته بود که برام این پاسخ رو فرستادن:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Sadra,&lt;/p&gt;

  &lt;p&gt;You are in luck — we have classified the sadra account as inactive and released the username for you to claim, as per our Name Squatting Policy:&lt;/p&gt;

  &lt;p&gt;https://help.github.com/articles/name-squatting-policy&lt;/p&gt;

  &lt;p&gt;Be quick, as the username is now publicly available. Glad to help!&lt;/p&gt;

  &lt;p&gt;Thanks,&lt;/p&gt;

  &lt;p&gt;Jacqui&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;بله، اون حساب کاربری رو آزاد کرده بودن و منم سریع رفتم و بر اساس راهنمای &lt;a href=&quot;https://help.github.com/articles/changing-your-github-username/&quot;&gt;Change your GitHub Username&lt;/a&gt; ، حساب کاربریم رو به یوزر Sadra تغییر دادم.&lt;/p&gt;

&lt;p&gt;حرف آخر، مطابق راهنمای&lt;a href=&quot;What happens when I change my username&quot;&gt; What happens when I change my username &lt;/a&gt;توجه کنید که اگر نام کاربریتون رو تغییر بدین، پروژه‌های که تعریف کرده بودین به آدرس جدید ریدایرکت نمیشن. پس یادتون باشه بعد تغییر نام‌کاربری، حتما لینکهایی که قبلا به پروژتون داده بودید (مثل وبلاگ یا اگر لایبرری ریلیز شده) رو هم اصلاح کنید.&lt;/p&gt;</content><author><name>صدرا املشی</name></author><category term="Github" /><category term="گیتهاب" /><summary type="html">شاید براتون پیش اومده باشه که توی گیتهاب میخواستین یک نام کاربری ثبت کنین، اما این نام‌کاربری قبلا توسط یه نفر دیگه گرفته شده. اوضاع وقتی ضدحالتر میشه که، میبینی طرف فقط اون رو اشغال کرده و تابحال هیچ استفاده‌ای ازش نشده!</summary></entry><entry><title type="html">برنامه نویسی ۲ نفره</title><link href="http://isapanah.com/2016/pair-programing" rel="alternate" type="text/html" title="برنامه نویسی ۲ نفره" /><published>2016-08-29T00:00:00+04:30</published><updated>2016-08-29T00:00:00+04:30</updated><id>http://isapanah.com/2016/pair-programing</id><content type="html" xml:base="http://isapanah.com/2016/pair-programing">&lt;p&gt;در این پست قصد دارم درباره Pair Programming يا برنامه نویسی ۲نفره (جفتی) صحبت کنم. اگر میدونید برنامه نویسی ۲نفره چیه لازم نیست پارگراف بعدی رو بخونید:&lt;/p&gt;

&lt;p&gt;یکی از مواردی که در مدل XP (یکی از متدهاي اجایل) به وضوح مشاهده می شود، مفهومی است تحت عنوان Pair Programming. منظور از این اصطلاح این است که دو برنامه نویس در کنار یکدیگر شروع به کار کردن می کنند. یکی کدنویسی می‌کند و دیگری به کدهای همکارش نگاه می‌کند و در صورتی که نظری در مورد بهتر شدن کد داشت، به همکارش اعلام می کند. (&lt;a href=&quot;https://www.sokanacademy.com/categories/programming/coding/tutorials/457/%D8%A2%D8%B4%D9%86%D8%A7%DB%8C%DB%8C-%D8%A8%D8%A7-%D9%85%D8%AF%D9%84-%D9%87%D8%A7%DB%8C-%D8%A7%D8%AC%D8%A7%DB%8C%D9%84&quot;&gt;سکان آکادمی&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/1-intro.jpg&quot; alt=&quot;Intro&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;چرا-کد-نویسی-دو-نفره&quot;&gt;چرا کد نویسی دو نفره؟&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;اشتراک گذاری دانش:&lt;/strong&gt; وقتی که باهم روی یه کد کار میکنید اشتباه احتمالیتون رو پیدا کرده و یاد می‌گیرید که دیگه اون اشتباه رو تکرار نکنید، این قضیه میتونه برعکس باشه و شما به دوستون یادآور بشید که فلان جای کدش اشتباست و درستش چیه. وقتی که دو نفری کد میزنید نسبت به وقتی که تنهایی کار می‌کنید، بهتر میتونید بفهمید که چی دارید مینویسید و یا چیکار دارید می‌کنید (چون دائما هی از هم میپرسید چرا؟ چرا باید اینکارو بکنم؟ مثلا وقتی بحث میکنید سر اینکه چرا بجای حلقه For باید از While استفاده کنید).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;یه مقدمه خوب:&lt;/strong&gt; دو نفری کد زدن برای کسانی که تازه استخدام شدن یا تازه از دانشگاه (مثلا رشته برنامه نویسی) فارغ التحصیل شدن میتونه یه نمونه خوب و تمرینی باشه تا نحوه کد زدن صحیح و تفکر برنامه نویسی رو یاد بگیرن. این یه راه خیلی خوبیه تا بتونید اعضای تیمتون رو بهتر بشناسید (با تواناییهاشون آشنا بشید)، بفهمید که استایل کد زدنشون چطوره و ازتون انتظار داره که چطور باهم کار کنید و کد بزنید. برنامه نویسی دو نفری بهتون کمک میکنه تا افراد تیم رو بهتر بشناسید در نتیجه میدونید اگه يك روز به یه مشکل خاص برخوردید به کدوم یک از اعضای تیم باید مراجعه کنید و مشکلتون رو درمیون بگذارید تا حل بشه.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;متمرکز شدن موقع کد نویسی:&lt;/strong&gt; خیلی از ماها در کنار کد زدنمون با صدای ناتیفیکیشن پیام دوستامون تو شبکه های اجتماعی حواسمون پرت میشه و سریع میریم ببینیم کی چی پیام داده (مثلا تلگرام، فیسبوم، توییتر و …)، اما وقتی یکی کنارتون باشه و قرار باشه دو نفری کد بزنید اونوقته که دیگه خجالت می‌کشید و تمام تمرکزتون رو در اون زمان روی کد زدنتون میگذارید ( محاله که دیگه توییترو باز کنی ? )!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;کد های بهتر و اصولی تر:&lt;/strong&gt; قائدتا موقعی که دو نفری کد میزنید (نسبت به تک نفری) سرعت کمتری دارید اما حتما کدها تمیزتر و اصولی تر بوده، همچنین با باگ یا خطای کمتری روبرو خواهید شد. (البته تحقیق مستندی در این باره صورت نگرفته که بخوام بهتون اثباتش کنم، اما شخصا فکر می‌کنم این حرف صادق باشه. نظر خودتون چیه؟ ? )&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;این موارد و فوایدی که درباره دونفری کد زدن گفتم شبیه فواید CodeReview نیست؟&lt;/strong&gt; (اگه دوس داری بدونی &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_review&quot;&gt;Code Review&lt;/a&gt; چیه از &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_review&quot;&gt;ویکی پدیا&lt;/a&gt; توضیحاتش رو بخون). اگرچه که دو نفری کد زدن خیلی فواید بیشتری بجای CodeReview داره: درواقع شما در لحظه کدهارو بازخوانی (CodeReview) میکنی.&lt;/p&gt;

&lt;h2 id=&quot;واو-اینکه-خیلی-عالیه-اما-چطوری-میتونم-شروع-کنم&quot;&gt;واو اینکه خیلی عالیه! اما چطوری میتونم شروع کنم؟&lt;/h2&gt;

&lt;p&gt;در این مقاله سعی كردم راجع به فرهنگ کد زدن دو نفره صحبت کنم، در جامعه ای که برنامه نویسی دو نفره خیلی کمه (البته اگه اصلا وجود داشته باشه!). پیشنهاد و بحث هایی که در این مقاله میشه ممکنه برای کساني که همین الان دارن دو نفری کد میزنن کمی عجیب و غریب باشه. البته من امیدوارم که این مقاله یه دید مثبت به شما بده در نتیجه ترغیب کنه شمارو که رو بیارید به برنامه نویسی دونفره. بعد از این شما می‌تونید برید تحقیق کنید، مقاله های بیشتری بخونید، حتی راجع بهش مقاله بنویسید، تیم خودتون رو تشکیل داده و این فرهنگ رو گسترش بدید.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;با کی باید جفت بشم؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;با کسی که میخواد یا تمایل داره با شما جفت بشه! کسی که تمایل داره در کنار شما کد نویسی کنه بهتر از کسی هست که “بهترین همسان” برای دونفره کد زدنه.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;اگه برای اولین باره، ابتدا در کنار تعدادی برنامه نویس (کمتر از ۵ تا) بنشینید و دو نفره کد زدن رو تجربه کنید تا بفهمید اصلا ۲نفری کد زدن با روحیات شما سازگاره و میتونید اون رو قبول کنید؟&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; خیلی از مردم دوست ندارن شما وقتتون رو سر نگاه کردن به کد های پروژه اونها (در فکر خودشون) هدر بدید! اگه واسه اونها سخته که (یا تمایل ندارن) بیان سراغ کد های شما، این به دور از ادب هست که شما هم سراغ کدهای اونها رفته و بخوایید که دونفره برنامه نویسی کنید.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;در اولین دفعات اول شما به سراغ دوستتون رفته، و در بازخوانی یا Review کدها بهش کمک کنید. این امر باعث میشه اون هم رغبت پیدا کنه و بیاد پیش شما و وقتش رو روی پروژه شما بزاره.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;خیلی از مردم دوست ندارن دو نفره کد بنویسین (یکی کنارشون بشینه و مثلا کدهاشونو تماشا کنه!)، خودتونو آماده کنید که با تواضع جواب “نه” اونهارو بپذیرید.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;چطوری باید جفتمو پیدا کنم؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;با__درخواست مستقیم__ شروع کنید (مثلا: سعید میای کنارم بشینی و باهم روی این پروژه کار کنیم؟). موفق نشدید؟ خوب اشکالی نداره. یه تقویم آماده کنید و زمان و تاریخ هایی که دوست دارین در اون تایم بصورت دو نفری رو پروژه خاص کار کنید رو مشخص کرده و برای اونها بفرستید. (مردم وقتی ببینن شما چقدر مصمم هستید و برای کارهاتون برنامه و زمان بندی مشخص دارید تمایل پیدا میکنن که باهاتون همکاری کنن).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;این دعوت نامه تقویمی رو برای همه اعضای تیم بفرستید. سعی کنید یه سری برنامه منظم برای یادگیری، آموزش و درگیر کردن اونها با پروژه های برنامه نویسی جفتی تهیه و تدارک ببینید.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/2-finally-ill-find-you.jpg&quot; alt=&quot;Finally I Found You&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;چه مدت باید جفتی کار کنم؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بعضی ها ۹۰ دقیقه رو مناسب میدونن، بعضی ها هم هستن که کل روز رو جفتی کار می‌کنن، این کار باید هرروز تا تموم شدن یک اسپرینت (دوره های ۲ تا ۴ هفته ای برای اتمام یک فاز از پروژه در مدل اسکرام از متد اجایل – &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_(software_development)#Sprint_Backlog&quot;&gt;اطلاعات بیشتر&lt;/a&gt; ) انجام بشه. البته در تحقیقات انجام شده مشخص شده دوره های زمانی کوتاه تر نتیجه بهتری در برنامه نویسی جفتی می‌گیریند (Article: &lt;a href=&quot;http://csis.pace.edu/~grossman/dcs/XR4-PromiscuousPairing.pdf&quot;&gt;Promiscuous Pairing&lt;/a&gt;). البته حتما با دوستتون مشورت کنید و ببینید که اون چقدر میتونه یا تمایل داره که در روز با شما وقت بگذاره و باهم برنامه نویسی کنید!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;سعی کنید برنامه تون رو بصورت دوره های ۱.۵ تا ۲ ساعته طراحی کنید.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/3-how-long-pair-programming.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;چند بار میتونم جفتی کار کنم؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;این یه موضوعه بین شما، جفت برنامه نویستون و تیمی که توش کار می‌کنید؛ فقط مطمئن بشید همتون باهم سر این موضوع موافقید.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;اگر ممکن بود، سعی کنید با دونفر (مختلف) در طول هفته کار کنید. این به شما کمک می‌کنه تا حس کنید که کار کردن با آدمهای مختلف چطوریه و چطور میتونید خودتون رو با اونها وفق بدید.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;خب، حالا باید چیکار کنم؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;دو تا واژه خیلی مهم&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;کد زن (Driver) :&lt;/strong&gt; کدهارو می‌نویسه، طرح کلی از برنامه تو ذهنشه، در باره کدها دید جزئی (Micro) داره.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;راهنما (Navigator) :&lt;/strong&gt; توی کد ها به دنبال مشکلات منطقی، باگ احتمالی و یا پیاده سازی بهتر می‌گرده،‌ مانند یه ناظر حرفه ای عمل میکنه، و از قبل به مشکلات بلقوه که ممکنه پیش بیاد فکر می‌کنه؛ در ضمن، به کد ها یه دید کلی (Macro) داره.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/4-pairing-vocab.jpg&quot; alt=&quot;Pairing Vocab&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;راهنما کارش مثل کسیه که کدهارو بازبینی میکنه، درواقع یه Code Reviewer، اون دائما به یه راه حل یا روش بهتر توی نوشتن کدها فکر میکنه.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;انواع-برنامه-نویسی-دو-نفره&quot;&gt;انواع برنامه نویسی دو نفره:&lt;/h2&gt;

&lt;p&gt;اصطلاح‌هایی که در زیر میاد کاملا اختراع و ایده خودمه و اصلا ربطی به واژه های رسمی (برنامه نویسی دو نفره) نداره، فقط واسه اینه که یه دید بهتر بهتون بده.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;کلاسیک:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/5-classic.jpg&quot; alt=&quot;Classic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;یه ماوس و کیبورد اضافی روی میز باشه که بتونید در لحظه نقش‌هاتون رو باهم عوض کنید، مثلا راهنما بشه کدزن و کدزن بشه راهنما. معمولا در هر ۱۵ دقیقه تا یکساعت حداقل یکبار این اتفاق میفته و مجبور میشید نقش‌هارو رو بهم پاس بدید؛ البته این مورد برای کسایی که تازه کارن حتی به دفعات بیشتر هم میرسه!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;فواید: کمکتون میکنه تا باهم هماهنگ شده، باهم کار کنید و پیش برید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;معایب: ممکنه روی میز فضای کافی برای گذاشتن یه کیبورد و ماوس اضافی نباشه&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;تیمی که من باهاشون کار می‌کنم اخیرا یه میز بزرگ واسه برنامه نویسی دو نفره تعیین کردن که دو تا کیبور، ماوس و مانیتور داره – هرموقع که اراده کنن در کثری از ثانیه نقش‌هاشون عوض میشه.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;کند:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;کارشون مثل همون بالاییه، فقط دیگه ماوس و کیبور اضافی در کار نیست!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/6-the-lazy.jpg&quot; alt=&quot;The Lazy&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;فواید: دیگه نمیتونین پوینتر ماوس همدیگه رو بدزدین و هی با کدا ور برین وسط کد زدن بقلی ؟ ، بدون هیچ دردسر و ابزار اضافه ای شروع به برنامه نویسی اشتراکی (دو نفره) میکنید (هر لحظه که اراده کردین ).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;معایب: مجبورین دستتون رو درااااز کنید و اون نقطه از کد که مشکل داره رو نشون دوستتون بدین ( دهنت سرویس میشه ).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;تازه کارانه:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;همزمان “راهنما” هم باشید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/7-the-noob.jpg&quot; alt=&quot;The Noob&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;فواید: دیگه پر از استرس و نگرانی نخواهید بود،‌ فرصت بیشتری برای سوال پرسیدن دارید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;معایب: این روش هیچوقت رضایت بخش نیست، و شما خیلی سخت می‌تونید روی کد زدن تمرکز کنید&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;من عاشق تازه کارام. این فرصت رو پیش میاره تا بتونید از راهنما سوال بپرسید، یاد بگیرین که تیم چطوری فکر و کار میکنه، و اینکه بفهمید جفتتون “راهنما” توی چه بخشی خیلی خوبه. این واسه تازه کارهایی مثل من وااااقعا یه فرصت عالیه.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;پریشانانه:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/8-the-distracted.jpg&quot; alt=&quot;The Distracted&quot; /&gt;&lt;/p&gt;

&lt;p&gt;مثل همون روش قبلی (تازه کارانه)، با این تفاوت که شما لپتابتونم میارین. اکثر زمان لپتاپاتون رو خیلی نزدیک بهم نگه می‌دارید و ازش برای بررسی کردن سینتسک، مترجم گوگل و یا حل و فصل یه مبحث استفاده می‌کنید. هیچ وقت بقل دستتیتون بیشتر از چند دقیقه معطل نکنید.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;فواید: میتونید خیلی راحت دنبال یه چیزی بگردین و پیداش کنید&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;معایب: خیلی راحت تمرکزتون از بین میره&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;مثل “تازه کارانه” شروع کنید به کار کردن، اما وقتی که احتیاج داشتید دنبال یه چیزی بگردین برید استراتژیتون رو به “پریشانانه” تغییر بدین. یه جورایی این مثل همون حالت کلاسیکه.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;آیا مورد یا چیز دیگه ای هست که باید بدونم؟&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بهداشت فردیتون رو رعایت کنید!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/9-hygiene.jpg&quot; alt=&quot;Hygiene&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;حتما دوش بگیرید، ادکلن خوشبو بزنید، مسواک کنید، خوشبو کننده دهان بخورید و حتما شب قبلش از خوردن پیاز و سیر خودداری کنید.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;باهم رفیق و شریک باشید&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-8-29/10-welcoming-pairing.png&quot; alt=&quot;Welcoming Pairing&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;من-اینکارو-شروع-کردم-و-عاشقش-شدمازش-متنفرم&quot;&gt;من اینکارو شروع کردم و عاشقش شدم/ازش متنفرم!&lt;/h2&gt;

&lt;p&gt;بعله! بجای تشکر از من این روش رو تست کنید. خیلی خوشحال می‌شم اگه بدونم شما چه تجربه ای از برنامه نویسی دو نفره داشتید.&lt;/p&gt;

&lt;p&gt;اگه شما ازش متنفر بودین، من واقعا متاسفم. برنامه نویسی دو نفره رو با فرد دیگه ای هم تست کردین؟ اگه نه، سعی کنید با چند نفر دیگه هم این روش رو تجربه کنید. خیلی ها اینجوری کار کردن رو دوست ندارن، اما فکر کنم شما واسه یه بارم که شده باید این روش کار کردن رو تجربه کنید.&lt;/p&gt;

&lt;div class=&quot;div-ltr&quot;&gt;

  &lt;p&gt;Translated from: &lt;a href=&quot;https://developer.atlassian.com/blog/2015/05/try-pair-programming/&quot;&gt;developer.atlassian.com&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;</content><author><name>صدرا املشی</name></author><category term="مقاله" /><category term="اسکرام" /><category term="اجایل" /><category term="مدیریت پروژه نرم‌افزاری" /><summary type="html">در این پست قصد دارم درباره Pair Programming يا برنامه نویسی ۲نفره (جفتی) صحبت کنم. اگر میدونید برنامه نویسی ۲نفره چیه لازم نیست پارگراف بعدی رو بخونید:</summary></entry><entry><title type="html">اینترنت اشیا، به سبک گیتار Sensus</title><link href="http://isapanah.com/2016/sensus-iot-electronic-guitar" rel="alternate" type="text/html" title="اینترنت اشیا، به سبک گیتار Sensus" /><published>2016-08-29T00:00:00+04:30</published><updated>2016-08-29T00:00:00+04:30</updated><id>http://isapanah.com/2016/sensus-iot-electronic-guitar</id><content type="html" xml:base="http://isapanah.com/2016/sensus-iot-electronic-guitar">&lt;p&gt;یخچال هوشمند، فِر هوشمند، لامپ هوشمند، حتی قفل هوشمند و.. و… و..، مطمئنا اینا واژه هایی هستن که تو یک یا نهایت دو سال اخیر بارها شنیده ایم و البته در سالهای آینده بیشتر خواهیم شنید. همه دستگاه هایی که نام بردم یا چیزهای دیگه‌ای که خودتون شنیدید در دسته ای به نام اینترنت اشیا یا بطور مخفف IOT قرار میگیرند( البته خیلی ها از دوستان لطف دارن و میگن اینترنت اشیا نه! اینترنت چیزها! بعضی از دوستان هم که خسته ان میگن چیزنت! ) اما واقعا اینترنت اشیا چیه و چه تعریفی داره. بهتره برای روشن شدن ماجرا از ویکی‌پدیا کمک بگیرییم:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;اینترنت چیزها، یا چیزنت (به انگلیسی: Internet of Things) (یا IOT به اختصار) که گاهی در زبان انگلیسی اینترنت اشیا(Internet of Objects) هم برای این کلمه استفاده می شود، به طور کلی اشاره دارد به بسیاری از چیزها شامل اشیا و وسایل محیط پیرامون‌مان که به شبکه اینترنت متصل شده و بتوان توسط اپلیکیشن‌های موجود در تلفن‌های هوشمند و تبلت کنترل و مدیریت شوند. (&lt;a href=&quot;https://fa.wikipedia.org/wiki/%D8%A7%DB%8C%D9%86%D8%AA%D8%B1%D9%86%D8%AA_%D8%A7%D8%B4%DB%8C%D8%A7&quot;&gt;اینترنت اشیا در ویکیپدیا&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;اما نمیخوام درمورد اینترنت اشیا صبحت کنم، یا اینکه واقعا IOT چیه باهم بحث کنیم، کافیه خودتو این کلمه رو گوگل کنید تا هزاران هزار لینک، مقاله، ویدئو و .. بهتون پیشنهاد بشه!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;چیزی که امروز من رو به وجد آورده تا با شما به اشتراک بگذارم، یه گیتاره! گیتار الکتریک.اما قبلش:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ایده پیدایش گیتار ازونجا شروع شد که در همنوازی ها، در مقابل سازهایی مثل &lt;a href=&quot;https://en.wikipedia.org/wiki/Bass_(instrument)&quot;&gt;بیس&lt;/a&gt; و &lt;a href=&quot;https://en.wikipedia.org/wiki/Drum_kit&quot;&gt;درامرز&lt;/a&gt;، صدای &lt;a href=&quot;https://fa.wikipedia.org/wiki/%DA%AF%DB%8C%D8%AA%D8%A7%D8%B1&quot;&gt;گیتار آکوستیک&lt;/a&gt; به خوبی شنیده نمیشد. در نتیجه موسیقی دانها برای حل این مشکل دست به‌-دامن علم الکترونیک شدن. در دهه ۳۰ بود که گیتار الکتریک وارد دنیای موسیقی شد. این یه انقلاب در صدا و تکنولوژی بود و تا هنوز هم ادامه داره. در دهه ۵۰ و با پیدایش &lt;a href=&quot;https://fa.wikipedia.org/wiki/%D8%B1%D8%A7%DA%A9_%D8%A7%D9%86%D8%AF_%D8%B1%D9%88%D9%84&quot;&gt;راک اند رول&lt;/a&gt;، گیتار های الکتریک با سرعت هرچه بیشتر جاشون رو در موسیقی باز کردن و به یکی از فراگیرترین ابزارهای موسیقی تبدیل شدن.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-12-30/1-guitar-timeline.jpg&quot; alt=&quot;Electronic Guitar Timeline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;اگه دوست دارید بیشتر راجع به گیتار الکتریک بدونید از شما دعوت میکنم تا به صفحه &lt;a href=&quot;https://en.wikipedia.org/wiki/Electric_guitar&quot;&gt;گیتار الکتریک در ویکیپدیا&lt;/a&gt; مراجعه کنید. همانطور که در گیتار آکوستیک صدا به شدت به بدنه و جریان ارتعشات سیمها در داخلش بستگی داره، در گیتار الکتریک این مسئله به سیگنال هایی که از پیکاپ‌ها منتقل میشه بستگی داره (راجع به پیکاپ بیشتر بدانید: &lt;a href=&quot;https://en.wikipedia.org/wiki/Electric_guitar#Pickups&quot;&gt;لینک۱&lt;/a&gt; – &lt;a href=&quot;https://fa.wikipedia.org/wiki/%D9%BE%DB%8C%DA%A9%D8%A7%D9%BE&quot;&gt;لینک ۲&lt;/a&gt; و مفصل تر در &lt;a href=&quot;http://www.electricguitar.blogfa.com/post/6&quot;&gt;لینک ۳&lt;/a&gt;). میشه به این سیگنال ها توسط ابزاری که بهش اِفکت مگیم، &lt;a href=&quot;https://fa.wikipedia.org/wiki/%D8%AA%D9%85%D8%A8%D8%B1_(%D9%85%D9%88%D8%B3%DB%8C%D9%82%DB%8C)&quot;&gt;طنین&lt;/a&gt; یا در اصطلاح حرفه‌ای &lt;a href=&quot;https://fa.wikipedia.org/wiki/%D8%AA%D9%85%D8%A8%D8%B1_(%D9%85%D9%88%D8%B3%DB%8C%D9%82%DB%8C)&quot;&gt;تِیمبر&lt;/a&gt; داد و سپس اون رو به اَمپلیفایر منتقل کرد. بسیاری از گیتار های امروزی بصورت Built-in ابزاری جهت افکت و تیمبر کردن دارن، اما برای ایجاد بسامد و طیف های گسترده از افکت های مختلف و دیجیتالی اکسترنال یا پدالی استفاده میشه.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-12-30/2-guitar-tools.jpg&quot; alt=&quot;Electronic Guitar Timeline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;امیدوارم اگر هم تاحالا با گیتار الکتریک آشنایی نداشتید، تا همینجا هم اطلاعات خوبی نصیبتون شده باشه. و اما از هرچه بگذریم، سخن یار خوشتر است .&lt;/p&gt;

&lt;p&gt;گیتار Sensus اولین گیتار هوشمند دنیاست. میشه باهاش مثل گیتار آکوستیک زد؟ یا یه گیتار الکتیریکه؟ میشه به عنوان گیتار بیس ازش استفاده کرد؟ حتی سیتی سایزر هم هست!!؟ باید به همه سوالهای که پرسیدین جواب بله! رو بدم. بله، گیتار هوشمند Sensus اجازه میده تا شما از مدولاسیون بینهایت بهره ببرین و بین گیتار آکوستیک و الکتریک سوییچ کنین، حتی میتونید افکت های سیتی‌سایزر رو باهاش پیاده کنین! میتونین باهاش رقص نور رو کنترل کنید! واسه گیتاریست های الکتریک (احتمالا مثل شما) میتونه هیجان انگیز باشه که وقتی بفهمید با Snesus میتونید از Spotify موزیک استریم کنین و با اون همنوازی کنین. تاز قراره در ادامه جالبترم هم بشه! این گیتار بدون هیچ اکسسوری مثل کامپیوتر یا اسپیکر کار میکنه. حتی بدون سیم! گیتار هوشمند Sensus به عبارتی دقیقتر توانایی های مارو در موزیک افزایش داده، بزارین راحت‌تر بگم، باید منتظر انقلابی که Seunsus خواهد آفرید باشیم.&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;&lt;style&gt;.h_iframe-aparat_embed_frame{position:relative;} .h_iframe-aparat_embed_frame .ratio {display:block;width:100%;height:auto;} .h_iframe-aparat_embed_frame iframe {position:absolute;top:0;left:0;width:100%; height:100%;}&lt;/style&gt;&lt;div class=&quot;h_iframe-aparat_embed_frame&quot;&gt; &lt;span style=&quot;display: block;padding-top: 57%&quot;&gt;&lt;/span&gt;&lt;iframe src=&quot;https://www.aparat.com/video/video/embed/videohash/GoLQc/vt/frame&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;گیتار هوشمند Sensus برای اولین بار در ۳ نوامبر ۲۰۱۵ در یک نمایش زنده در کنفرانس Web Summit Dubin توسط یک استارتاپ سوئدی-ایتالیایی به نام &lt;a href=&quot;http://www.mindmusiclabs.com/&quot;&gt;MIND Music Labs&lt;/a&gt; رونمایی شد. و در &lt;a href=&quot;https://en.wikipedia.org/wiki/Angel_investor&quot;&gt;همانجا از سوی فرشتگان کسب&lt;/a&gt; و کار مثل Jscob Key مدیر دیجیتال در شرکت Warner Music، سپس Per Briliton مدیر کمپانی Ludvig Linge و همچنین آقای Marcelo Benitez از Proaltus Capital سرمایه گذاری شد و حمایت شد. چیزی نزدیک به نیم میلیون دلار.&lt;/p&gt;

&lt;p&gt;Sensus برای نوازندگانی که بیش از ۵۰ دهه منتظر همچنین چیزی بودن، حد نهایت تکامل یک ابزار موسیقی به حساب میاد، و این تکنولوژی بود که توسط تیم منحصر بفرد MIND پیاده سازی شد، بقول Michele Benincaso موسس و مدیر MIND: “سنسُس ترکیبی از گیتار آکوستیک سنتی و پیشرفته ترین تکنولوژی‌هاست”&lt;/p&gt;

&lt;p&gt;بنیان‌گذار و ایده پرداز این گیتار &lt;a href=&quot;http://www.benincaso.com/&quot;&gt;Michele Benincaso&lt;/a&gt; ست که در مدرسه Cremona’s Antonio Stradivari Luthiery ایتالیا تحصیل موسیقی کرده. از دهه ۶۰ به بعد همگام با رشد و انقلاب در صنایع الکترونیک و کامپیوتر، صنعت موسیقی و خود موزیسین ها نیز دچار تحول شدن. همونطور که Stradivari در صده ۱۶ و فندر (&lt;a href=&quot;https://en.wikipedia.org/wiki/Fender_Musical_Instruments_Corporation&quot;&gt;Fender&lt;/a&gt; یکی از معتبر ترین شرکت ها در طراحی و تولید گیتار الکتریکی است) در دهه ۶۰ در موسیقی انقلابی به پا کردن، میشل بنینکاسو نیز با استفاده از آخرین تکنولوژی های موجود سعی کرد به نیاز های موزیسین ها پاسخ بده تا با استفاده از اون بتونن صداهای جدید خلق کنند، با روشهای جدید خودشون رو مطرح کرده در نتیجه بتونن مخاطبین بیشتری جذب کنن.&lt;/p&gt;

&lt;p&gt;گیتار Sensus با صدای 360 درجه، و سیستم موزیک وایرلس و امکان استفاده به عنوان یک واحد IOT میتونه امکانت محشر و بدون محدودیتی به موزیسین ها برای ساخت موزیک و افکت های بینظیر بده. شما میتونید همه اینکارهارو بطور طبیعی و بدون نیاز به ابزارهایی مثل امپ و افکت که در بالاتر هم ذکر کردم انجام بدید، چون همه چیزهایی که شما لازم دارین،‌ در داخل گیتار تعبیه شده. تمامی این امکانات بطور بلادرنگ انجام میشه و شما میتونید بلافاصله اونهارو به اشتراک بگذارید. گیتار Sensus با استفاده از سنسورهایی که طراحی کرده (مثل سنسور شتابسنج و سنوسور های لیزری) میتونه یه حلقه یا Loop بینهایت برای اون ملودی که زدید ایجاد کنه.&lt;/p&gt;

&lt;p&gt;به لطف فناوری MIND، تمامی صداهای HD تولید شده بطور مستقیم توسط بدنه چوبی همین گیتار تولید می‌شن. همون بدنه چوبی که با اتکا به اصول آکوستیک طراحی و از همون چوبی که برای ساخت ویالون مشهور &lt;a href=&quot;https://en.wikipedia.org/wiki/Stradivarius&quot;&gt;Stradivari&lt;/a&gt; ساخته شده. بدنه ای از چوب قرمزِ روشنِ کریستالیِ صنوبر.&lt;/p&gt;

&lt;div class=&quot;video-container&quot;&gt;&lt;style&gt;.h_iframe-aparat_embed_frame{position:relative;} .h_iframe-aparat_embed_frame .ratio {display:block;width:100%;height:auto;} .h_iframe-aparat_embed_frame iframe {position:absolute;top:0;left:0;width:100%; height:100%;}&lt;/style&gt;&lt;div class=&quot;h_iframe-aparat_embed_frame&quot;&gt; &lt;span style=&quot;display: block;padding-top: 57%&quot;&gt;&lt;/span&gt;&lt;iframe src=&quot;https://www.aparat.com/video/video/embed/videohash/i2Shl/vt/frame&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;گیتار هوشمند Senus رو واقعا میشه یک دستگاه تمام IOT به حساب آورد. با بکارگیری هوشمندانه سنسورهای حساس و به پشتیبانی از یک مغز دیجیتالی، میتونه در لحظه اطلاعات مورد نیاز رو دریافت، پردازش و سپس اون رو به اشتراک بگذاره. این گیتار ۱۰۰٪ اینترنت بیس هست، Sensus میتونه ملودی های ضبط شده رو پخش یا از پلتفرم مورد نظر شما استریم کنه، و صدالبته آثار شمارو با کیفیت HD روی شبکه های اجتماعی منتشر کنه. شما میتونید با استفاده از Spotify موزیک مورد نظرتون رو استریم کنید، شگفت انگیزه اگه بدونید که شما حتی میتونید با دوستی که خیلی خیلی خیلی از شما دوره، با استفاده از اینترنت بهم متصل بشید و باهم همنوازی کنید، و از اون جالبتر، بعد از اینکه موزیکتون رو نواختید، اون رو روی شبکه های اجتماعی مثل فیسبوک و ساندکلاود به اشتراک بزارید.&lt;/p&gt;

&lt;p&gt;همه چیز مهییجتر میشه وقتی بفهمید که اون میتونه با بقیه ابزارهایی که مجهز به سرویس IOT باشه ارتباط برقرار کنه، اونوقته که باید نشست و شنید و دید که این ابزارها چه کارهایی که به کمک هم نمیکنن! برای همینه که میگم این گیتار یک انقلاب در صنعت موسیقیه.&lt;/p&gt;

&lt;p&gt;میشل، با کمک یک تیم روییای از محقیقین و هنرمندان کاربلد تونست به این هدف خودش جامه عمل بپوشونه. نسخه هایی مدرن از صنعتگرانی مانند استاد Stradivari و پدر گیتار الکتریک (آنطور که ما میشناسیمش) آقای &lt;a href=&quot;https://en.wikipedia.org/wiki/Leo_Fender&quot;&gt;Leo Fender&lt;/a&gt;. در میان این تیم میتوانیم از پروفسور Carlo Fischione که یکی از محقیقن برجسته جهان در فن آوری IOT نام ببریم، فردی که کسوت استادی در هردو دانشگاه MIT و Harvard رو تجربه کرده، که ایشان مغز متفکر و طراح سرویس های اینترنت بیس در این گیتار بودند. همچنین دکتر Luca Truchet، مدیر بخش موسیقی در این تیم و متخصص تعامل موسیقی الکترونیک و انسان-کامپیوتری (روجوع شود به &lt;a href=&quot;https://en.wikipedia.org/wiki/Human_computer&quot;&gt;این مقاله&lt;/a&gt;). و در نهایت دکتر Stefano Zambon، متخصص طراحی صدا با استفاده از ابزارهای موسیقی دیجیتال هستند. برای آشنایی با دیگر اعضای به این &lt;a href=&quot;http://www.mindmusiclabs.com/team/&quot;&gt;لینک&lt;/a&gt; مراجعه کنید.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-12-30/3-sensus.jpg&quot; alt=&quot;Electronic Guitar Timeline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-12-30/4-sensus.jpg&quot; alt=&quot;Electronic Guitar Timeline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;شاید براتون این سوال پیش اومده خب! من عاشق این گیتار شدم! قیمتش چقدره و از کجا میتونم بخرمش؟ متاسفانه هنوز از قیمت دقیق و حتی تقریبی و زمان انتشار این محصول به بازار اطلاعی در دسترسی نیست. من ایمیل به تیم MIND ارسال کردم و در این باره ازشون پرسیدم. اما تا زمان نگارش این مطلب، هنوز پاسخی داده نشده. درصورتی که اطلاعای ازین بابت بدستم برسه حتما این پست رو آپدیت خواهم کرد.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/2016-12-30/5-sensus.jpg&quot; alt=&quot;Electronic Guitar Timeline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;مقاله های زیر رو هم جالب دیدم، اگه دوس داشتین میتونید مطالعه کنید:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://umgasmagazine.com/swedish-made-sensus-making-guitars-smart/&quot;&gt;Swedish-made SENSUS: making guitars ‘smart’&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.gitarist.nl/nieuws/artikel/3-17646/sensus-smartguitar&quot;&gt;Sensus Smartguitar’s werelds eerste smartguitar door Mind Music Labs&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.guitarworld.com/gear-news-electrics/meet-sensus-worlds-first-real-smart-guitar/29086&quot;&gt;Meet Sensus, “The World’s First Real Smart Guitar”&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://blog.thethings.io/how-iot-will-change-music/&quot;&gt;How IOT will Changes Music&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>صدرا املشی</name></author><category term="راک" /><category term="اینترنت اشیاء" /><category term="گیتار" /><category term="گیتار الکتریک" /><category term="ابزار" /><summary type="html">یخچال هوشمند، فِر هوشمند، لامپ هوشمند، حتی قفل هوشمند و.. و… و..، مطمئنا اینا واژه هایی هستن که تو یک یا نهایت دو سال اخیر بارها شنیده ایم و البته در سالهای آینده بیشتر خواهیم شنید. همه دستگاه هایی که نام بردم یا چیزهای دیگه‌ای که خودتون شنیدید در دسته ای به نام اینترنت اشیا یا بطور مخفف IOT قرار میگیرند( البته خیلی ها از دوستان لطف دارن و میگن اینترنت اشیا نه! اینترنت چیزها! بعضی از دوستان هم که خسته ان میگن چیزنت! ) اما واقعا اینترنت اشیا چیه و چه تعریفی داره. بهتره برای روشن شدن ماجرا از ویکی‌پدیا کمک بگیرییم:</summary></entry><entry><title type="html">پست تست وبلاگ</title><link href="http://isapanah.com/2010/test-post" rel="alternate" type="text/html" title="پست تست وبلاگ" /><published>2010-03-03T00:00:00+03:30</published><updated>2010-03-03T00:00:00+03:30</updated><id>http://isapanah.com/2010/test-post</id><content type="html" xml:base="http://isapanah.com/2010/test-post">&lt;h1 id=&quot;سلام-دنیا&quot;&gt;سلام دنیا&lt;/h1&gt;

&lt;p&gt;این یک نوشتار آزمایشی برای نمایش قابلیتهای &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;مارک داون&lt;/a&gt; است.&lt;/p&gt;

&lt;h2 id=&quot;یک-لیست&quot;&gt;یک لیست&lt;/h2&gt;

&lt;p&gt;ویژگی های نرم افزار آزاد&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;آزادی اجرای برنامه برای هر کاری (آزادی صفرم)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;آزادی مطالعه چگونگی کار برنامه و تغییر آن (پیش نیاز: متن برنامه) (آزادی یکم)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;آزادی تکثیر و کپی برنامه (آزادی دوم)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;آزادی تقویت و بهتر کردن برنامه و توزیع آن برای همگان (پیش نیاز: متن برنامه) (آزادی سوم)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;آیتم اول&lt;/li&gt;
  &lt;li&gt;آیتم دوم&lt;/li&gt;
  &lt;li&gt;آیتم سوم&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;آیتم اول&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;آیتم دوم&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;آیتم سوم&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;نوشته-های-تورفته&quot;&gt;نوشته های تورفته&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است. چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی تکنولوژی مورد نیاز و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد. کتابهای زیادی در شصت و سه درصد گذشته، حال و آینده شناخت فراوان جامعه و متخصصان را می طلبد تا با نرم افزارها شناخت بیشتری را برای طراحان رایانه ای علی الخصوص طراحان خلاقی و فرهنگ پیشرو در زبان فارسی ایجاد کرد. در این صورت می توان امید داشت که تمام و دشواری موجود در ارائه راهکارها و شرایط سخت تایپ به پایان رسد وزمان مورد نیاز شامل حروفچینی دستاوردهای اصلی و جوابگوی سوالات پیوسته اهل دنیای موجود طراحی اساسا مورد استفاده قرار گیرد.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor sit amet, diam semper deserunt in vim, usu in quis percipit accusamus. Vix zril voluptua deseruisse et, sed deleniti sententiae ex. An ferri assueverit per, iusto corpora partiendo eu est. Possim blandit similique an ius, erat sensibus instructior vis at. Scriptorem philosophia in sea, at mei eros periculis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;تیتر-درجه-یک&quot;&gt;تیتر درجه یک&lt;/h1&gt;

&lt;h2 id=&quot;تیتر-درجه-دو&quot;&gt;تیتر درجه دو&lt;/h2&gt;

&lt;h3 id=&quot;تیتر-درجه-سه&quot;&gt;تیتر درجه سه&lt;/h3&gt;

&lt;p&gt;لورم ایپسوم ( به انگلیسی &lt;code class=&quot;highlighter-rouge&quot;&gt;lorem ipsum&lt;/code&gt; ) متنی است بی مفهوم که تشکیل شده از کلمات معنی دار یا بی معنی کنار هم. کاربر با دیدن متن لورم ایپسوم تصور میکند متنی که در صفحه مشاهده میکند این متن واقعی و مربوط به توضیحات صفحه مورد نظر است واقعی است. حالا سوال اینجاست که این متن “ &lt;strong&gt;لورم ایپسوم&lt;/strong&gt; “ به چه دردی میخورد و اساسا برای چه منظور و هدفی ساخته شده است؟ پیش از بوجود آمدن&lt;del&gt;لورم ایپسوم&lt;/del&gt;، طراحان وب سایت در پروژه های وب سایت و طراحان کرافیک در پروژه های &lt;em&gt;طراحی کاتولوگ ، بروشور ، پوستر و …&lt;/em&gt; همواره با این مشکل مواجه بودند که__صفحات پروژه خود را پیش از آنکه متن اصلی توسط کارفرما ارائه گرد__د و در صفحه مورد نظر قرار گیرد چگونه پر کنند؟؟&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;define foobar() {
    print &quot;Welcome to flavor country!&quot;;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Welcome to flavor country!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;و-اضافه-کردن-لینک-ها&quot;&gt;و اضافه کردن لینک ها&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fsf.org/&quot;&gt;بنیاد نرم افزار آزاد&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnu.org&quot;&gt;بنیاد گنو&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;جدول-ها&quot;&gt;جدول ها&lt;/h2&gt;

&lt;div class=&quot;table-container dir-rtl pos-right &quot;&gt;

  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;ستون اول&lt;/th&gt;
        &lt;th&gt;ستون دوم&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;متن ستون اول&lt;/td&gt;
        &lt;td&gt;متن ستون دوم&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;متن دوم ستون اول&lt;/td&gt;
        &lt;td&gt;متن دوم ستون دوم&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;متن سوم ستون اول&lt;/td&gt;
        &lt;td&gt;متن سوم ستون سوم&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

&lt;/div&gt;

&lt;div class=&quot;table-container dir-ltr pos-center &quot;&gt;

  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th style=&quot;text-align: center&quot;&gt;Option&lt;/th&gt;
        &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;data&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;engine&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;ext&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;extension to be used for dest files.&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

&lt;/div&gt;

&lt;div class=&quot;table-container dir-ltr pos-left &quot;&gt;

  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th style=&quot;text-align: center&quot;&gt;Option&lt;/th&gt;
        &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;data&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;engine&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;ext&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;extension to be used for dest files.&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

&lt;/div&gt;

&lt;div class=&quot;table-container dir-ltr pos-left &quot;&gt;

  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th style=&quot;text-align: left&quot;&gt;Control&lt;/th&gt;
        &lt;th style=&quot;text-align: center&quot;&gt;Requierement&lt;/th&gt;
        &lt;th style=&quot;text-align: left&quot;&gt;Info&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;getSelectedItem()&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;result = &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;: returns the selected item&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;isSelected()&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;result = &lt;code class=&quot;highlighter-rouge&quot;&gt;boolean&lt;/code&gt;: returns &lt;strong&gt;true&lt;/strong&gt; if any item selected, and vice versa&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;setSelection(NUMBER)&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt; position&lt;/td&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;you should pass the &lt;strong&gt;position of item&lt;/strong&gt; to select the item programatically&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;setSelection(TEXT)&lt;/td&gt;
        &lt;td style=&quot;text-align: center&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt; value&lt;/td&gt;
        &lt;td style=&quot;text-align: left&quot;&gt;you should pass the &lt;strong&gt;item value&lt;/strong&gt; to select the item programatically&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;

&lt;/div&gt;

&lt;h1 id=&quot;تست-بج&quot;&gt;تست بج&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://jitpack.io/#amlashi-sadra/AwesomeSpinner&quot;&gt;&lt;img src=&quot;https://jitpack.io/v/amlashi-sadra/AwesomeSpinner.svg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/amlashi-sadra/AwesomeSpinner/blob/master/LICENSE&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/licence-MIT-lightgrey.svg?style=flat&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/dependencies-non-yellow.svg?style=flat&quot; alt=&quot;Dependencies&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;https://gitter.im/AwesomeSpinner&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/gitter-join%20chat-%23E91E63.svg?style=flat&quot; alt=&quot;Gitter&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Minimum%20Android%20SDK-14-blue.svg&quot; alt=&quot;Minimum Android SDK Version&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;تست-بلاک-کد&quot;&gt;تست بلاک کد&lt;/h1&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;allprojects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://jitpack.io'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;com.isapanah.awesomespinner.AwesomeSpinner&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@+id/my_spinner&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:spinnerDirection=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ltr&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;app:spinnerHint=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Select a category&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Automobile&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ariplane&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ArrayAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;categoriesAdapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;simple_spinner_item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;my_spinner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;categoriesAdapter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;تست-عکس&quot;&gt;تست عکس&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post/test-post/post-image.jpg&quot; alt=&quot;Test Image&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;image-wrapper&quot;&gt;
    
    &lt;a href=&quot;/assets/img/post/test-post/post-image.jpg&quot; title=&quot;Test Image&quot; target=&quot;_blank&quot;&gt;
        
        &lt;img src=&quot;/assets/img/post/test-post/post-image.jpg&quot; alt=&quot;Test Image&quot; /&gt;
        
    &lt;/a&gt;
    
    
    &lt;p class=&quot;image-caption&quot;&gt;Test Image Caption&lt;/p&gt;
    
&lt;/div&gt;

&lt;h1 id=&quot;تست-یوتیوب&quot;&gt;تست یوتیوب&lt;/h1&gt;

&lt;div class=&quot;video-container&quot;&gt;&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;&lt;div class=&quot;embed-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/xIBiJ_SzJTA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;تست-آپارات&quot;&gt;تست آپارات&lt;/h1&gt;

&lt;div class=&quot;video-container&quot;&gt;&lt;style&gt;.h_iframe-aparat_embed_frame{position:relative;} .h_iframe-aparat_embed_frame .ratio {display:block;width:100%;height:auto;} .h_iframe-aparat_embed_frame iframe {position:absolute;top:0;left:0;width:100%; height:100%;}&lt;/style&gt;&lt;div class=&quot;h_iframe-aparat_embed_frame&quot;&gt; &lt;span style=&quot;display: block;padding-top: 57%&quot;&gt;&lt;/span&gt;&lt;iframe src=&quot;https://www.aparat.com/video/video/embed/videohash/DY8HB/vt/frame&quot; allowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>صدرا املشی</name></author><category term="Category Test" /><category term="تست دسته بندی" /><summary type="html">سلام دنیا</summary></entry></feed>